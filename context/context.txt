Uniquery is a powerful tool designed to streamline the integration and automation of API data with Google Sheets, enabling users to effortlessly manage and analyze data across various platforms without needing extensive technical knowledge. Here is a comprehensive description of Uniquery including its features, use cases, and solutions it provides:
Features:
Import Data to Spreadsheets: Allows direct data importation from APIs to Google Sheets, fostering efficient data management and analysis.
User Accessibility: Designed for users without coding skills, making API data manipulation accessible to a broader audience.
Ready-to-Use APIs: Comes with a built-in library containing hundreds of APIs ready for immediate use.
Advanced API Request Options: Supports various request methods such as GET, POST, PUT, PATCH, and DELETE for comprehensive data interactions.
No-Code Custom API Integrations: Enables creating custom connections to virtually any data source with an API, enhancing flexibility.
Automated Data Refreshing: Features the ability to schedule automatic data requests and updates, useful for regular reporting.
Spreadsheet-Friendly: Offers spreadsheet-first functionalities like appending vs. overwriting data modes, and using cell values in API requests for dynamic interactions.
Vast Application Integration: Compatible with over 100 applications, expanding the range of data sources accessible for users.
Comprehensive Data Management: Facilitates the combination of data from multiple sources in one place, eliminating the need for manual exports or custom scripts.
Custom OAuth 2.0 Connections: Allows creating personalized OAuth 2.0 integrations, broadening the scope of secure connections.
API Data Preview and Filtering: Includes a response viewer to preview, customize, and filter API data before import, ensuring only relevant data is collected.
Use Cases:
Automated Reporting: Ideal for generating automatic reports from platforms such as Shopify, enabling real-time business insights.
SEO Monitoring Tools: Utilized for creating automated tools for monitoring SEO performance, offering a streamlined approach to digital marketing analytics.
Marketing Data Aggregation: Facilitates compiling data from various marketing channels into a single repository, simplifying analysis and strategy formulation.
Dynamic Data Visualization: Can be connected with data visualization tools like Data Studio for creating custom views of data, aiding in decision-making processes.
Streamlined Workflow Automations: Supports building automated workflows for tasks like financial reporting, inventory management, and sales tracking.
Solutions Offered:
Access to Toolchain with Limited Resources: Uniquery provides a universe of possibilities for automating and integrating API data handling with the simplicity of spreadsheet interfaces, making it a valuable tool for professionals with varying technical skills.
Time-saving Automations: It significantly reduces the time spent on manual data entry, offering solutions that automate data transfers and reporting.
Enhanced Data Accessibility: By making API data manipulation accessible to non-coders, Uniquery democratizes data analysis and reporting capabilities.
Seamless Integration: Offers a seamless approach to integrating and automating data from Shopify, Xero, Facebook, and many other platforms, streamlining processes across the board.
Reliability and Efficiency: Known for its reliability and glitch-free operations, Uniquery stands out as a production-ready tool for professional environments, trusted by over a million users including leading organizations like Google, Ebay, and Hubspot.


Expanding on the features of Uniquery based on the detailed descriptions provided in your saved data, here's an exhaustive breakdown of its functionalities that collectively empower users to automate and enhance their data workflows within Google Sheets:
Built-in API Library
Hundreds of APIs: Uniquery comes with an extensive library of ready-to-use APIs, allowing immediate access to a wide variety of data sources without any coding requirement.
Easy-to-Use Interface
No-Coding Required: Specifically designed for users without coding knowledge, enabling seamless integration and manipulation of API data directly within Google Sheets.
Connectivity and Custom Requests
Broad Integration Capability: Can connect to almost any API using a no-code interface, significantly expanding the data sources that users can tap into.
Flexible Data Requests: Users can customize their requests to meet specific data requirements, including configuring API endpoints, parameters, and authentication details.
Data Automation and Scheduling
Automate Reporting: Provides the option to set triggers for data pulls from APIs at regular intervals - hourly, daily, weekly, or monthly, automating the reporting process.
Dynamic Request Capabilities: Offers the ability to use cell values in spreadsheet as variables for dynamic API requests, enhancing the flexibility in data reporting and analysis.
Data Handling and Management
Comprehensive Data Combination: Enables the aggregation and management of data from multiple sources in one place, negating the need for manual data merging.
Simplified Spreadsheet Integration: Features such as append vs. overwrite modes and building API requests based on cell values are specifically tailored for spreadsheet users, making data management straightforward.
Advanced Customization and Analysis Tools
Custom OAuth 2.0 Connections: Support for creating custom OAuth connections, facilitating secure integration with a wider range of APIs.
In-depth Data Filtering and Analysis: Includes tools like JMESPath for advanced data filtering, allowing users to tailor the imported data to their specific analytical needs.
Response Viewer: A tool that allows users to preview, customize, and filter API data before importing it into Google Sheets, ensuring that only relevant data is collected and analyzed.
User Support and Community
Dedicated Support and Knowledge Base: Uniquery provides an extensive support framework including a knowledge base, support forum, and direct contact options to assist users with any issues or questions.
User Community: Access to a community of Uniquery API Connector users for sharing insights, asking questions, and getting tips.
Pricing and Plans
Offers both free and premium plans to cater to different usage levels and requirements. The free version includes 100 monthly API requests with powerful features, while paid plans allow for more requests, scheduling, and additional capabilities.
This extensive feature set equips Uniquery to serve a wide range of use cases, from creating automated monitoring tools for SEO, integrating and automating tools for eCommerce platforms like Shopify, to compiling marketing data from various channels into a single repository. Despite its simplicity and ease of use for non-coders, Uniquery packs a powerful suite of functionalities for professional-grade data management and analysis


Uniquery: A Comprehensive Use Case Description
Uniquery stands out as a versatile API connector, specifically designed to streamline the integration and automation of data across different platforms and applications directly into Google Sheets. It offers an extensive array of functionalities tailored for various purposes ranging from automated reporting to dynamic data visualization. Here are some of the notable use cases derived from your saved data:
Automated Reporting: Uniquery excels in generating automatic reports from platforms like Shopify, Xero, Facebook, and Cin7. This capability enables users to acquire real-time insights into their business operations[1].
SEO Monitoring Tools: It supports the creation of automated tools for monitoring SEO performance. SEO Team Leads have praised Uniquery for opening up a world of possibilities with a very limited and efficient toolchain, highlighting its reliability, glitch-free experience, and readiness for production[2].
Marketing Data Aggregation: The platform allows for the aggregation of data from various marketing channels into a single repository. This aggregation streamlines the analysis process and aids in formulating strategies efficiently[3].
Dynamic Data Visualization: Uniquery can be paired with data visualization tools like Data Studio. Such integration facilitates the creation of custom views of data, significantly enhancing decision-making processes[4].
Streamlined Workflow Automations: Uniquery supports the development of automated workflows for a variety of tasks including financial reporting, inventory management, and sales tracking. This feature allows for more efficient management of operational tasks in businesses[5].
Integration with Numerous APIs: It seamlessly integrates with a wide range of popular platforms and tools including but not limited to Binance, CoinMarketCap, Facebook, Github, Harvest, Mailchimp, and Youtube. This extensive integration capability makes it an excellent tool for various automation and data synchronization tasks[6].
No-Code Solution: Uniquery provides a code-less, universal API connector, designed to save users time and money. It allows for easy importation of JSON into Google Sheets without the need for coding, making it accessible to a wider audience without technical expertise[7].
Privacy and Security: The platform ensures user data privacy and security, requiring only basic permissions to run and undergoes strict security and privacy approval processes upon app approval by Google[8].
Cost-Effective Data Integration: Uniquery is highlighted as an affordable alternative to expensive data integration and visualization platforms. It enables users to connect REST APIs to Google Sheets, providing fast and cost-effective access to data from any paid or free API[9].
These use cases underline the broad applicability and significance of Uniquery across various domains including business analytics, digital marketing, SEO monitoring, and beyond. It stands as a powerful tool for data-driven professionals looking to leverage API data for enhanced productivity and decision-making.
Unleashing the Power of Marketing Data Aggregation with Uniquery
In the ever-evolving digital marketplace, the ability to harness and analyze data stands at the core of successful marketing strategies. Navigating through the vast sea of data from various channels, however, can be overwhelming for marketers. Herein lies the magic of marketing data aggregation—a process that has been significantly streamlined and empowered by the innovative Uniquery API Connector. This article dives into the game-changing capabilities of Uniquery in transforming marketing data aggregation into a pivotal asset for businesses.
The Uniquery Edge in Data Aggregation
Uniquery has emerged as a powerhouse in the field of marketing data aggregation, addressing the critical need for a centralized data repository. What sets Uniquery apart is its user-friendly, code-less interface, facilitating effortless integration with a myriad of marketing channels without the need for extensive technical knowledge . This feature ensures that even non-coders can leverage the full potential of API data. But the advantages don't stop there:
Wide-Ranging Integration: Uniquery boasts compatibility with a broad spectrum of APIs from leading platforms such as Binance, CoinMarketCap, Facebook, Github, Harvest, Mailchimp, and YouTube . This extensive range of integration ensures that marketers can easily pull data from various sources into one central location, thereby enabling a holistic view of marketing performance across different channels.
Automated Data Importation to Google Sheets: Through its seamless integration with Google Sheets, Uniquery empowers marketers to automatically import data from different marketing platforms directly into spreadsheets[1]. This automation not only saves valuable time but also significantly reduces the risk of human error in data handling.
Real-Time Insights: With the capability for real-time data synchronization, Uniquery offers marketers immediate insights into their campaigns' performance . This real-time data access is crucial for making timely decisions that can steer marketing strategies towards success.
Privacy and Security Assurance: Given the sensitive nature of marketing data, Uniquery’s strict adherence to privacy and security standards offers peace of mind. Every app that integrates with Google Sheets through Uniquery undergoes a rigorous security and privacy approval process, ensuring that user data is handled with utmost care .
Transformative Impact on Marketing Strategies
The consolidated view of data that Uniquery enables has a transformative impact on marketing strategies. Marketers can identify trends, measure campaign effectiveness, and glean insights from across different channels—all from a single repository. This aggregated viewpoint assists in the following ways:
Informed Decision Making: With data-driven insights at their fingertips, marketers can make informed decisions that align closely with their target audience’s preferences and behaviors.
Enhanced ROI: By identifying the most effective marketing channels and strategies through data aggregation, businesses can allocate their resources more efficiently, boosting their overall return on investment.
Increased Operational Efficiency: The automation of data aggregation processes eliminates the need for manual data collection and entry, freeing up marketers to focus on strategy and creativity.
Looking Ahead
As the landscape of digital marketing continues to evolve at an unprecedented pace, tools like Uniquery that simplify and enhance the process of marketing data aggregation will become indispensable. Uniquery’s innovative approach to data integration not only democratizes access to powerful insights for marketers of all technical levels but also propels businesses towards a more data-driven, informed future. In sum, Uniquery stands at the forefront of revolutionizing marketing strategies through the power of efficient and effective data aggregation.
[1]
User
write tutorial on how to pull facebook ads data into Google Sheets using Uniquery. MAKE SURE USE PROVIDED FILES
Pere
Tutorial: Pulling Facebook Ads Data into Google Sheets Using Uniquery
Integrating Facebook Ads data into Google Sheets enables a streamlined approach to analyzing your advertising performance without the complications of manual data extraction. Uniquery, a powerful yet user-friendly API Connector for Google Sheets, simplifies this process, allowing even those without coding experience to access and organize their Facebook Ads data efficiently. Here's a step-by-step guide to get you started:
Step 1: Setting Up Uniquery in Google Sheets
Install Uniquery Add-on: Open a new Google Sheets document, click on "Extensions" > "Add-ons" > "Get add-ons". Search for "Uniquery API Connector" and install it. This process is straightforward and requires no coding skills, making Uniquery accessible to all users[1].
Launch Uniquery: Once installed, Uniquery can be accessed from the "Extensions" menu within Google Sheets. Simply navigate to "Uniquery API Connector" > "Launch" to open the Uniquery panel on the right side of your Google Sheets interface.
Step 2: Gathering Facebook Ads API Details
Before you can pull data into Google Sheets, you need access to your Facebook Ads API. This involves a few steps on the Facebook platform:
Access Facebook Developer Console: Log into your Facebook account and navigate to the Facebook for Developers page to create a new app if you haven't already. This app will act as the medium through which Uniquery accesses your Facebook Ads data.
Obtain API Key and URL: Once your app is set up, go to the "Tools" > "Graph API Explorer" section to get your API URL and Access Token (API Key). These credentials enable secure access to your Facebook Ads data.
Step 3: Importing Facebook Ads Data into Google Sheets
With Uniquery launched and your Facebook Ads API details at hand, you're now ready to import your data:
Enter API Details in Uniquery: In the Uniquery panel within Google Sheets, you'll find fields to enter your API URL and Access Token. Paste the Facebook Ads API URL and your Access Token accordingly[2].
Specify Data Requirements: Uniquery allows you to specify exactly which data you need from your Facebook Ads campaigns. Utilize customization options to select the metrics, date ranges, and other parameters important to your analysis.
Execute and Import Data: After setting up your API details and specifying your data requirements, hit the "Import" button in Uniquery. The tool will pull the requested Facebook Ads data directly into your Google Sheet.
Step 4: Analyzing Your Facebook Ads Data
With your Facebook Ads data imported into Google Sheets, you can now utilize the spreadsheet's powerful analytical tools to:
Analyze Performance Metrics: Sort, filter, and apply formulas to analyze key performance indicators such as click-through rates, impressions, conversion rates, and cost per acquisition.
Visualize Data: Create charts and graphs within Google Sheets to visualize your advertising performance, making it easier to identify trends and make data-driven decisions.
Share Insights: Seamlessly share your findings with team members or stakeholders directly from Google Sheets, ensuring everyone is informed and aligned on your advertising strategies.
Conclusion
Using Uniquery to integrate Facebook Ads data into Google Sheets provides a powerful, efficient, and codeless solution to analyze and optimize your advertising efforts. By following this straightforward tutorial, you can unlock valuable insights into your campaigns, drive better decision-making, and ultimately enhance your ROI.
[1][2]
User
in step 3, provide more details on API details and where to put them
Pere
In Step 3 of our tutorial on pulling Facebook Ads data into Google Sheets using Uniquery, we’ll delve deeper into handling API details and the specifics of inputting them into Uniquery. This step is crucial for ensuring a seamless and secure data import process.
Step 3: Importing Facebook Ads Data into Google Sheets - Expanded
To successfully import your Facebook Ads data into Google Sheets, Uniquery requires you to input the correct API URL and Access Token. Here's how to detail this process:
3.1 Finding the Facebook Ads API URL and Access Token
API URL: The API URL is the endpoint provided by Facebook that Uniquery will utilize to request your ads data. You can find this by navigating to the Facebook for Developers site, selecting your app, and looking under the 'Graph API Explorer'. The typical format for the Facebook Ads API URL includes the base URL (https://graph.facebook.com/) followed by the version of the API and your ad account ID (e.g., v11.0/act_YOUR_AD_ACCOUNT_ID/insights). Make sure to check the latest documentation for specifics.
Access Token: Your Access Token serves as a key to authenticate and authorize your request to Facebook's servers. It can be retrieved from the same Graph API Explorer page where you found your API URL. Be mindful to select an access token with permissions to access your Facebook Ads data.
3.2 Inputting API Details in Uniquery
Once you have your API URL and Access Token, you'll input them into Uniquery through the following steps within Google Sheets:
Open Uniquery Panel: With Uniquery already launched (as outlined in Step 1), you should see the Uniquery panel on the right side of your Google Sheets interface.
API URL Field: Locate the field labeled as 'API URL’ or similar. Here, you will paste the API URL you obtained from the Facebook for Developers site. This URL directs Uniquery where to send the request for your ads data.
Access Token Field: Look for a field typically labeled as 'Access Token’, 'API Key', or 'Bearer Token’. This is where you input the Access Token obtained from Facebook. The Access Token authenticates your request, proving to Facebook that you have authorization to access the data.
Guidance and Tips:
Ensure Accuracy: Double-check that you’ve correctly copied and pasted the API URL and Access Token to avoid authentication errors or data retrieval issues.
Consider Security: Access Tokens are sensitive pieces of information. Ensure that you're not sharing your spreadsheet with access tokens with unauthorized individuals.
Use Uniquery's Customization Options: Uniquery often offers additional fields or options allowing you to further specify the data you wish to import, such as specific metrics, date ranges, or filters. Utilize these to tailor the imported data to your analysis needs.
Following these detailed steps for entering your API details into Uniquery, you're set to securely and efficiently import your Facebook Ads data into Google Sheets. This process streamlines data analysis, aiding in strategic decision-making and optimization of your advertising campaigns.


  Platform
Solutions
Pricing
Resources
Company
Log in

Maximize your marketing returns with better data
Streamline your marketing and sales data from every platform into one single source of truth. Get accurate, real-time insights to make smarter decisions. Experience the change now.

Get data into

Choose a destination for your data
Fueling insights for 200K+ companies in 120 countries
Dyson
Dentsu
Accenture
Electrolux
Warner Bros
iProspect
TBWA
Create one source of truth
Uniquery integrates your data from 150+ platforms and makes it analysis-ready in your go-to reporting and analytics tools.

Our most popular destinations
Connect all your data sources in minutes. Uniquery helps you pull granular marketing data from all the marketing sources that matter to you.

Select the destination you need to get started.

Looker Studio
Looker Studio

Learn more
Google Sheets
Google Sheets

Learn more
Google BigQuery
Google BigQuery

Learn more
Uniquery API
Uniquery API

Learn more
Data acceleration for all businesses
Uniquery solves data problems across a variety of industries and types of companies. Whether you’re an agency, a small business, or a large corporation, we have a solution for you to help you succeed as you grow.

See below some testimonials from a selection of our customers.

15%
of global online ad spend

200K+
companies

80%
less expensive to maintain

99.9%
platform uptime























What's the ROI of Uniquery?
Improve return on advertisement
Automated reports allow you to optimize marketing campaigns faster and get maximum return on your ad spend.

80% less expensive to maintain
Set up once and let us handle the rest. The cost of integrating your data sources with Uniquery is half that of building your own integrations.

Reduce reporting time by 50%
Focus on value-adding activities like data analysis and optimization instead of manual data transfer and reporting.

Turn your marketing data into opportunity
We streamline your marketing data so you can focus on the insights.

Get data into

Choose a destination for your data
Marketing Intelligence Cloud

Connect
Own
Transform
Analyze
Act
Data sources

Facebook Ads
Google Ads
Google Analytics 4
Microsoft Advertising
LinkedIn Ads
Instagram Insights
TikTok Ads
All data sources
Destinations

Looker Studio
Google Sheets
Excel
Power BI
Uniquery API
BigQuery
Google Cloud Storage
All destinations
Pricing

Looker Studio
Google Sheets
Excel
Power BI
Uniquery API
BigQuery
Google Cloud Storage
All pricing
Use Uniquery

Start trial
Book demo
Log in
Learn

Template gallery
Blog
SuperSummit
Company

Contact Us
About Uniquery
Careers
Affiliate program
Solution partners
Support
Documentation
© Uniquery 2024

Security
Terms of Service
Privacy Policy
Cookie Policy
Cookie Settings
Facebook
Linkedin
Instagram
YouTube
X (Twitter)

Platform
Solutions
Pricing
Resources
Company
Log in
Connect with all your

marketing & sales data

One place to connect all of your marketing platforms and transfer your data to a centralized location.

https://cdn.sanity.io/images/8ly2m84z/production/f630aa522d913ddf3a01a4481ada2cd87ac15030-410x284.svg
Measure every metric and dimension in your data
Save time and streamline
From social media integrations all the way to your CRM of choice, Uniquery integrates with the most popular marketing & sales platforms.

Streamline reporting on the data that matters to you.

https://cdn.sanity.io/images/8ly2m84z/production/9025adf75ee4d7e70b046d8664a36b350d49c52a-509x375.svg
https://cdn.sanity.io/images/8ly2m84z/production/008cfee8d9739e754409514420a9e425e89f9f1e-417x281.svg
Avoid human error
Remove the reliance on copy & pasting data from one location to another and avoid human error.

Trust that your data is correct every time.

Built for any team
Whether you are a performance marketer, SEO specialist, social media manager or anything in between, we have you covered.

Uniquery caters to any and every department in your marketing organization.

https://cdn.sanity.io/images/8ly2m84z/production/57a325fe98ee69eb795d9f11cdf0137d4dfc5994-550x248.svg
Uniquery enables you to connect with all your marketing & sales data
Contact us to get started.

https://cdn.sanity.io/images/8ly2m84z/production/972869bd87cf9f869eb862ee496a1be782be3c62-492x418.svg
Shared connections
Need to do full funnel reporting on your marketing efforts but don’t have access to log in to every marketing platform? No problem.

With Uniquery, you can share the connection and make sure that everyone can access the data they need, without having to create user credentials for every platform.

Constant development
Don’t see an integration for the platform you are looking for? Let us know!

The Uniquery development team is constantly building connections to new platforms based on what our users are asking for.

https://cdn.sanity.io/images/8ly2m84z/production/3f1c8ee2e2cb3559fe29f4ce4dee29d8a403143c-345x320.svg
Data acceleration for all businesses

Uniquery solves data problems across a variety of industries and types of companies. Whether you’re an agency, a small business, or a large corporation, we have a solution for you to help you succeed as you grow.
See below some testimonials from a selection of our customers.

15%
of global online ad spend  reported through our products

200K+
companies

60%
more metrics/dimensions compared to industry average

99.9%
Platform uptime

Fueling insights for 200K+ companies in 120 countries
Ready to take your marketing reporting to the next level?
Contact us to get started.

Marketing Intelligence Cloud

Connect
Own
Transform
Analyze
Act
Data sources

Facebook Ads
Google Ads
Google Analytics 4
Microsoft Advertising
LinkedIn Ads
Instagram Insights
TikTok Ads
All data sources
Destinations

Looker Studio
Google Sheets
Excel
Power BI
Uniquery API
BigQuery
Google Cloud Storage
All destinations
Pricing

Looker Studio
Google Sheets
Excel
Power BI
Uniquery API
BigQuery
Google Cloud Storage
All pricing
Use Uniquery

Start trial
Book demo
Log in
Learn

Template gallery
Blog
SuperSummit
Company

Contact Us
About Uniquery
Careers
Affiliate program
Solution partners
Support
Documentation
© Uniquery 2024

Security
Terms of Service
Privacy Policy
Cookie Policy
Cookie Settings
Facebook
Linkedin
Instagram
YouTube
X (Twitter)
Connect - Marketing Intelligence Cloud - Uniquery

Platform
Solutions
Pricing
Resources
Company
Log in
Accelerate marketing insights in Google Sheets
Get data from 100+ data sources.
14-day free trial. No credit card required.
Recommended by Google
View file
Watch this step-by-step guide to get started
video play button
Uniquery: Getting started with Google Sheets
Get more Google Sheets tips
Fueling insights for 200K+ companies in 120 countries
Dyson
Dentsu
Accenture
Electrolux
Warner Bros
iProspect
TBWA
01

Integrate Icon
Integrate
Connect all your data sources in minutes.

Uniquery helps you pull granular marketing data from the marketing sources that matter to you. Select the exact metrics you want to move from your go-to marketing and sales platforms.

See all data sources available
02

Automate Icon
Streamline
Set up automatic refreshes and emailing.

With just a few clicks, Uniquery helps you automate your reports so you can get email notifications whenever a particular metric changes.

Accelerate Icon
03

Accelerate
Turn Google Sheets into a powerful reporting system.

Spend less time moving data and more time using it. Get to answers faster, optimize your budget, and improve return on ad spend.

See all our Google Sheets templates
Power your spreadsheets with artificial intelligence
Incorporate ChatGPT (Open AI) to automatically analyze your marketing results. Available for all Uniquery customers directly in the Uniquery sidebar.
Learn more
The data sources that matter
Connect all your data sources in minutes. Uniquery helps you pull granular marketing data from all the marketing sources that matter to you.

Where do you want to pull data from?

Filter by category
Ahrefs
Ahrefs
Most popular data source badge
Facebook Ads
Facebook Ads
Most popular data source badge
Facebook Insights
Facebook Insights
Most popular data source badge
Google Ads
Google Ads
Most popular data source badge
Google Analytics 4
Google Analytics 4
Most popular data source badge
Google My Business
Google My Business
Most popular data source badge
Google Search Console
Google Search Console
Most popular data source badge
Instagram Insights
Instagram Insights
Most popular data source badge
LinkedIn Ads
LinkedIn Ads
Most popular data source badge
LinkedIn Company Pages
LinkedIn Company Pages
Most popular data source badge
LinkedIn Revenue Attribution
LinkedIn Revenue Attribution
Most popular data source badgeEarly access data source badge
Marketo
Marketo
Most popular data source badgeEarly access data source badge
Showing 12/138 compatible data sources

Watch this webinar to improve your Google Sheets reports
In this webinar, the Uniquery team shares 10 Google Sheets tips that will save you time and bring your reports to the next level.

video play button
10 Must-know Google Sheets Tips for Marketers
Get full access to Uniquery with a 14-day free trial.
No credit card required.
Marketing Intelligence Cloud

Connect
Own
Transform
Analyze
Act
Data sources

Facebook Ads
Google Ads
Google Analytics 4
Microsoft Advertising
LinkedIn Ads
Instagram Insights
TikTok Ads
All data sources
Destinations

Looker Studio
Google Sheets
Excel
Power BI
Uniquery API
BigQuery
Google Cloud Storage
All destinations
Pricing

Looker Studio
Google Sheets
Excel
Power BI
Uniquery API
BigQuery
Google Cloud Storage
All pricing
Use Uniquery

Start trial
Book demo
Log in
Learn

Template gallery
Blog
SuperSummit
Company

Contact Us
About Uniquery
Careers
Affiliate program
Solution partners
Support
Documentation
© Uniquery 2024

Security
Terms of Service
Privacy Policy
Cookie Policy
Cookie Settings
Facebook
Linkedin
Instagram
YouTube
X (Twitter)
Uniquery for Google Sheets - Uniquery


Support center
Create a ticket
Your tickets
Log in
Start free trial
Home  Solution home  Google Sheets  Set up Uniquery for Google Sheets
Enter your search term here...
System updates
Get started
Connect data
Build reports
Data sources
Access and permissions
Manage teams
Google Sheets
Set up Uniquery for Google Sheets
How to install Uniquery in Google Sheets
How to log in to a Uniquery data source in Google Sheets
How to create a Uniquery query in Google Sheets
How to create and manage scheduled refreshes in Google Sheets
Video guide: How to set up scheduled report triggers in Google Sheets
How to use Uniquery report templates in Google Sheets
How to use filters in Google Sheets queries
Video tutorials: Uniquery for Google Sheets
How to use suggested queries in Google Sheets
Using Uniquery in Google Sheets
Google Sheets best practices
Google Sheets troubleshooting
Looker Studio
Excel
Data warehouses and cloud storage
Uniquery Storage
Power BI
The Uniquery API and Query Manager
Collaborative work management tools
Transform data
How to install Uniquery in Google Sheets
Uniquery Support Site Team
Modified on: Mon, 29 Jan, 2024 at 10:07 AM
The first step in importing your data to Google Sheets with Uniquery is to install the add-on.





Note
If you see a message saying that the Uniquery add-on isn't allowed, get in touch with your organization's Google Workspace administrator for help. Follow these instructions to learn more about the issue.

Instructions
Open Uniquery in the Google Workplace Marketplace.
Click Install.
Click Continue.
Sign in with the Google Account you want to use with Uniquery.
Click Allow to give Uniquery the permissions it needs to work.
Review our security and data privacy policy if you’d like to learn more about how we keep the data you process with us secure.
Open Google Sheets.
Navigate to Extensions → Uniquery → Launch to open the Uniquery sidebar.


Next steps
Set up a Uniquery query in Google Sheets.

Did you find it helpful? Yes No

Products
Uniquery for Looker Studio

Uniquery for Google Sheets

Uniquery for Excel

Uniquery API

Uniquery for BigQuery

Uniquery for Snowflake

Uniquery for Azure Synapse

Uniquery for Amazon S3

Uniquery for Google Cloud Storage

Uniquery for Azure Storage

Data source connectors

Resources
Case studies

Template gallery

Blog

Support portal

Security

Documentation

Company
About us

Careers

Partner program

Contact




Article views count
Support center
Create a ticket
Your tickets
Log in
Start free trial
Home  Solution home  Google Sheets  Set up Uniquery for Google Sheets
Enter your search term here...
System updates
Get started
Connect data
Build reports
Data sources
Access and permissions
Manage teams
Google Sheets
Set up Uniquery for Google Sheets
How to install Uniquery in Google Sheets
How to log in to a Uniquery data source in Google Sheets
How to create a Uniquery query in Google Sheets
How to create and manage scheduled refreshes in Google Sheets
Video guide: How to set up scheduled report triggers in Google Sheets
How to use Uniquery report templates in Google Sheets
How to use filters in Google Sheets queries
Video tutorials: Uniquery for Google Sheets
How to use suggested queries in Google Sheets
Using Uniquery in Google Sheets
Google Sheets best practices
Google Sheets troubleshooting
Looker Studio
Excel
Data warehouses and cloud storage
Uniquery Storage
Power BI
The Uniquery API and Query Manager
Collaborative work management tools
Transform data
How to log in to a Uniquery data source in Google Sheets
Uniquery Support Site Team
Modified on: Wed, 20 Sep, 2023 at 9:13 AM
This guide will walk you through how to log in to a data source using the Uniquery sidebar in Google Sheets. In the video below, we use Google Analytics as an example.



Make sure you’ve installed the Uniquery add-on before you begin.




Instructions
Open a Google Sheets file.
Click Extensions → Uniquery → Launch to open the sidebar.
Click Create new query.
Under Data source, select the data source you want to add.
Follow the prompts to log in to the data source and authenticate your connection.


Next steps
Create a Uniquery query in Google Sheets.

Did you find it helpful? Yes No

Products
Uniquery for Looker Studio

Uniquery for Google Sheets

Uniquery for Excel

Uniquery API

Uniquery for BigQuery

Uniquery for Snowflake

Uniquery for Azure Synapse

Uniquery for Amazon S3

Uniquery for Google Cloud Storage

Uniquery for Azure Storage

Data source connectors

Resources
Case studies

Template gallery

Blog

Support portal

Security

Documentation

Company
About us

Careers

Partner program

Contact




Article views count


Uniquery is a powerful tool designed to streamline the integration and automation of API data with Google Sheets, enabling users to effortlessly manage and analyze data across various platforms without needing extensive technical knowledge. Here is a comprehensive description of Uniquery including its features, use cases, and solutions it provides:
Features:
Import Data to Spreadsheets: Allows direct data importation from APIs to Google Sheets, fostering efficient data management and analysis.
User Accessibility: Designed for users without coding skills, making API data manipulation accessible to a broader audience.
Ready-to-Use APIs: Comes with a built-in library containing hundreds of APIs ready for immediate use.
Advanced API Request Options: Supports various request methods such as GET, POST, PUT, PATCH, and DELETE for comprehensive data interactions.
No-Code Custom API Integrations: Enables creating custom connections to virtually any data source with an API, enhancing flexibility.
Automated Data Refreshing: Features the ability to schedule automatic data requests and updates, useful for regular reporting.
Spreadsheet-Friendly: Offers spreadsheet-first functionalities like appending vs. overwriting data modes, and using cell values in API requests for dynamic interactions.
Vast Application Integration: Compatible with over 100 applications, expanding the range of data sources accessible for users.
Comprehensive Data Management: Facilitates the combination of data from multiple sources in one place, eliminating the need for manual exports or custom scripts.
Custom OAuth 2.0 Connections: Allows creating personalized OAuth 2.0 integrations, broadening the scope of secure connections.
API Data Preview and Filtering: Includes a response viewer to preview, customize, and filter API data before import, ensuring only relevant data is collected.
Use Cases:
Automated Reporting: Ideal for generating automatic reports from platforms such as Shopify, enabling real-time business insights.
SEO Monitoring Tools: Utilized for creating automated tools for monitoring SEO performance, offering a streamlined approach to digital marketing analytics.
Marketing Data Aggregation: Facilitates compiling data from various marketing channels into a single repository, simplifying analysis and strategy formulation.
Dynamic Data Visualization: Can be connected with data visualization tools like Data Studio for creating custom views of data, aiding in decision-making processes.
Streamlined Workflow Automations: Supports building automated workflows for tasks like financial reporting, inventory management, and sales tracking.
Solutions Offered:
Access to Toolchain with Limited Resources: Uniquery provides a universe of possibilities for automating and integrating API data handling with the simplicity of spreadsheet interfaces, making it a valuable tool for professionals with varying technical skills.
Time-saving Automations: It significantly reduces the time spent on manual data entry, offering solutions that automate data transfers and reporting.
Enhanced Data Accessibility: By making API data manipulation accessible to non-coders, Uniquery democratizes data analysis and reporting capabilities.
Seamless Integration: Offers a seamless approach to integrating and automating data from Shopify, Xero, Facebook, and many other platforms, streamlining processes across the board.
Reliability and Efficiency: Known for its reliability and glitch-free operations, Uniquery stands out as a production-ready tool for professional environments, trusted by over a million users including leading organizations like Google, Ebay, and Hubspot.


Expanding on the features of Uniquery based on the detailed descriptions provided in your saved data, here's an exhaustive breakdown of its functionalities that collectively empower users to automate and enhance their data workflows within Google Sheets:
Built-in API Library
Hundreds of APIs: Uniquery comes with an extensive library of ready-to-use APIs, allowing immediate access to a wide variety of data sources without any coding requirement.
Easy-to-Use Interface
No-Coding Required: Specifically designed for users without coding knowledge, enabling seamless integration and manipulation of API data directly within Google Sheets.
Connectivity and Custom Requests
Broad Integration Capability: Can connect to almost any API using a no-code interface, significantly expanding the data sources that users can tap into.
Flexible Data Requests: Users can customize their requests to meet specific data requirements, including configuring API endpoints, parameters, and authentication details.
Data Automation and Scheduling
Automate Reporting: Provides the option to set triggers for data pulls from APIs at regular intervals - hourly, daily, weekly, or monthly, automating the reporting process.
Dynamic Request Capabilities: Offers the ability to use cell values in spreadsheet as variables for dynamic API requests, enhancing the flexibility in data reporting and analysis.
Data Handling and Management
Comprehensive Data Combination: Enables the aggregation and management of data from multiple sources in one place, negating the need for manual data merging.
Simplified Spreadsheet Integration: Features such as append vs. overwrite modes and building API requests based on cell values are specifically tailored for spreadsheet users, making data management straightforward.
Advanced Customization and Analysis Tools
Custom OAuth 2.0 Connections: Support for creating custom OAuth connections, facilitating secure integration with a wider range of APIs.
In-depth Data Filtering and Analysis: Includes tools like JMESPath for advanced data filtering, allowing users to tailor the imported data to their specific analytical needs.
Response Viewer: A tool that allows users to preview, customize, and filter API data before importing it into Google Sheets, ensuring that only relevant data is collected and analyzed.
User Support and Community
Dedicated Support and Knowledge Base: Uniquery provides an extensive support framework including a knowledge base, support forum, and direct contact options to assist users with any issues or questions.
User Community: Access to a community of Uniquery API Connector users for sharing insights, asking questions, and getting tips.
Pricing and Plans
Offers both free and premium plans to cater to different usage levels and requirements. The free version includes 100 monthly API requests with powerful features, while paid plans allow for more requests, scheduling, and additional capabilities.
This extensive feature set equips Uniquery to serve a wide range of use cases, from creating automated monitoring tools for SEO, integrating and automating tools for eCommerce platforms like Shopify, to compiling marketing data from various channels into a single repository. Despite its simplicity and ease of use for non-coders, Uniquery packs a powerful suite of functionalities for professional-grade data management and analysis


Uniquery: A Comprehensive Use Case Description
Uniquery stands out as a versatile API connector, specifically designed to streamline the integration and automation of data across different platforms and applications directly into Google Sheets. It offers an extensive array of functionalities tailored for various purposes ranging from automated reporting to dynamic data visualization. Here are some of the notable use cases derived from your saved data:
Automated Reporting: Uniquery excels in generating automatic reports from platforms like Shopify, Xero, Facebook, and Cin7. This capability enables users to acquire real-time insights into their business operations[1].
SEO Monitoring Tools: It supports the creation of automated tools for monitoring SEO performance. SEO Team Leads have praised Uniquery for opening up a world of possibilities with a very limited and efficient toolchain, highlighting its reliability, glitch-free experience, and readiness for production[2].
Marketing Data Aggregation: The platform allows for the aggregation of data from various marketing channels into a single repository. This aggregation streamlines the analysis process and aids in formulating strategies efficiently[3].
Dynamic Data Visualization: Uniquery can be paired with data visualization tools like Data Studio. Such integration facilitates the creation of custom views of data, significantly enhancing decision-making processes[4].
Streamlined Workflow Automations: Uniquery supports the development of automated workflows for a variety of tasks including financial reporting, inventory management, and sales tracking. This feature allows for more efficient management of operational tasks in businesses[5].
Integration with Numerous APIs: It seamlessly integrates with a wide range of popular platforms and tools including but not limited to Binance, CoinMarketCap, Facebook, Github, Harvest, Mailchimp, and Youtube. This extensive integration capability makes it an excellent tool for various automation and data synchronization tasks[6].
No-Code Solution: Uniquery provides a code-less, universal API connector, designed to save users time and money. It allows for easy importation of JSON into Google Sheets without the need for coding, making it accessible to a wider audience without technical expertise[7].
Privacy and Security: The platform ensures user data privacy and security, requiring only basic permissions to run and undergoes strict security and privacy approval processes upon app approval by Google[8].
Cost-Effective Data Integration: Uniquery is highlighted as an affordable alternative to expensive data integration and visualization platforms. It enables users to connect REST APIs to Google Sheets, providing fast and cost-effective access to data from any paid or free API[9].
These use cases underline the broad applicability and significance of Uniquery across various domains including business analytics, digital marketing, SEO monitoring, and beyond. It stands as a powerful tool for data-driven professionals looking to leverage API data for enhanced productivity and decision-making.
Unleashing the Power of Marketing Data Aggregation with Uniquery
In the ever-evolving digital marketplace, the ability to harness and analyze data stands at the core of successful marketing strategies. Navigating through the vast sea of data from various channels, however, can be overwhelming for marketers. Herein lies the magic of marketing data aggregation—a process that has been significantly streamlined and empowered by the innovative Uniquery API Connector. This article dives into the game-changing capabilities of Uniquery in transforming marketing data aggregation into a pivotal asset for businesses.
The Uniquery Edge in Data Aggregation
Uniquery has emerged as a powerhouse in the field of marketing data aggregation, addressing the critical need for a centralized data repository. What sets Uniquery apart is its user-friendly, code-less interface, facilitating effortless integration with a myriad of marketing channels without the need for extensive technical knowledge . This feature ensures that even non-coders can leverage the full potential of API data. But the advantages don't stop there:
Wide-Ranging Integration: Uniquery boasts compatibility with a broad spectrum of APIs from leading platforms such as Binance, CoinMarketCap, Facebook, Github, Harvest, Mailchimp, and YouTube . This extensive range of integration ensures that marketers can easily pull data from various sources into one central location, thereby enabling a holistic view of marketing performance across different channels.
Automated Data Importation to Google Sheets: Through its seamless integration with Google Sheets, Uniquery empowers marketers to automatically import data from different marketing platforms directly into spreadsheets[1]. This automation not only saves valuable time but also significantly reduces the risk of human error in data handling.
Real-Time Insights: With the capability for real-time data synchronization, Uniquery offers marketers immediate insights into their campaigns' performance . This real-time data access is crucial for making timely decisions that can steer marketing strategies towards success.
Privacy and Security Assurance: Given the sensitive nature of marketing data, Uniquery’s strict adherence to privacy and security standards offers peace of mind. Every app that integrates with Google Sheets through Uniquery undergoes a rigorous security and privacy approval process, ensuring that user data is handled with utmost care .
Transformative Impact on Marketing Strategies
The consolidated view of data that Uniquery enables has a transformative impact on marketing strategies. Marketers can identify trends, measure campaign effectiveness, and glean insights from across different channels—all from a single repository. This aggregated viewpoint assists in the following ways:
Informed Decision Making: With data-driven insights at their fingertips, marketers can make informed decisions that align closely with their target audience’s preferences and behaviors.
Enhanced ROI: By identifying the most effective marketing channels and strategies through data aggregation, businesses can allocate their resources more efficiently, boosting their overall return on investment.
Increased Operational Efficiency: The automation of data aggregation processes eliminates the need for manual data collection and entry, freeing up marketers to focus on strategy and creativity.
Looking Ahead
As the landscape of digital marketing continues to evolve at an unprecedented pace, tools like Uniquery that simplify and enhance the process of marketing data aggregation will become indispensable. Uniquery’s innovative approach to data integration not only democratizes access to powerful insights for marketers of all technical levels but also propels businesses towards a more data-driven, informed future. In sum, Uniquery stands at the forefront of revolutionizing marketing strategies through the power of efficient and effective data aggregation.
[1]
User
write tutorial on how to pull facebook ads data into Google Sheets using Uniquery. MAKE SURE USE PROVIDED FILES
Pere
Tutorial: Pulling Facebook Ads Data into Google Sheets Using Uniquery
Integrating Facebook Ads data into Google Sheets enables a streamlined approach to analyzing your advertising performance without the complications of manual data extraction. Uniquery, a powerful yet user-friendly API Connector for Google Sheets, simplifies this process, allowing even those without coding experience to access and organize their Facebook Ads data efficiently. Here's a step-by-step guide to get you started:
Step 1: Setting Up Uniquery in Google Sheets
Install Uniquery Add-on: Open a new Google Sheets document, click on "Extensions" > "Add-ons" > "Get add-ons". Search for "Uniquery API Connector" and install it. This process is straightforward and requires no coding skills, making Uniquery accessible to all users[1].
Launch Uniquery: Once installed, Uniquery can be accessed from the "Extensions" menu within Google Sheets. Simply navigate to "Uniquery API Connector" > "Launch" to open the Uniquery panel on the right side of your Google Sheets interface.
Step 2: Gathering Facebook Ads API Details
Before you can pull data into Google Sheets, you need access to your Facebook Ads API. This involves a few steps on the Facebook platform:
Access Facebook Developer Console: Log into your Facebook account and navigate to the Facebook for Developers page to create a new app if you haven't already. This app will act as the medium through which Uniquery accesses your Facebook Ads data.
Obtain API Key and URL: Once your app is set up, go to the "Tools" > "Graph API Explorer" section to get your API URL and Access Token (API Key). These credentials enable secure access to your Facebook Ads data.
Step 3: Importing Facebook Ads Data into Google Sheets
With Uniquery launched and your Facebook Ads API details at hand, you're now ready to import your data:
Enter API Details in Uniquery: In the Uniquery panel within Google Sheets, you'll find fields to enter your API URL and Access Token. Paste the Facebook Ads API URL and your Access Token accordingly[2].
Specify Data Requirements: Uniquery allows you to specify exactly which data you need from your Facebook Ads campaigns. Utilize customization options to select the metrics, date ranges, and other parameters important to your analysis.
Execute and Import Data: After setting up your API details and specifying your data requirements, hit the "Import" button in Uniquery. The tool will pull the requested Facebook Ads data directly into your Google Sheet.
Step 4: Analyzing Your Facebook Ads Data
With your Facebook Ads data imported into Google Sheets, you can now utilize the spreadsheet's powerful analytical tools to:
Analyze Performance Metrics: Sort, filter, and apply formulas to analyze key performance indicators such as click-through rates, impressions, conversion rates, and cost per acquisition.
Visualize Data: Create charts and graphs within Google Sheets to visualize your advertising performance, making it easier to identify trends and make data-driven decisions.
Share Insights: Seamlessly share your findings with team members or stakeholders directly from Google Sheets, ensuring everyone is informed and aligned on your advertising strategies.
Conclusion
Using Uniquery to integrate Facebook Ads data into Google Sheets provides a powerful, efficient, and codeless solution to analyze and optimize your advertising efforts. By following this straightforward tutorial, you can unlock valuable insights into your campaigns, drive better decision-making, and ultimately enhance your ROI.
[1][2]
User
in step 3, provide more details on API details and where to put them
Pere
In Step 3 of our tutorial on pulling Facebook Ads data into Google Sheets using Uniquery, we’ll delve deeper into handling API details and the specifics of inputting them into Uniquery. This step is crucial for ensuring a seamless and secure data import process.
Step 3: Importing Facebook Ads Data into Google Sheets - Expanded
To successfully import your Facebook Ads data into Google Sheets, Uniquery requires you to input the correct API URL and Access Token. Here's how to detail this process:
3.1 Finding the Facebook Ads API URL and Access Token
API URL: The API URL is the endpoint provided by Facebook that Uniquery will utilize to request your ads data. You can find this by navigating to the Facebook for Developers site, selecting your app, and looking under the 'Graph API Explorer'. The typical format for the Facebook Ads API URL includes the base URL (https://graph.facebook.com/) followed by the version of the API and your ad account ID (e.g., v11.0/act_YOUR_AD_ACCOUNT_ID/insights). Make sure to check the latest documentation for specifics.
Access Token: Your Access Token serves as a key to authenticate and authorize your request to Facebook's servers. It can be retrieved from the same Graph API Explorer page where you found your API URL. Be mindful to select an access token with permissions to access your Facebook Ads data.
3.2 Inputting API Details in Uniquery
Once you have your API URL and Access Token, you'll input them into Uniquery through the following steps within Google Sheets:
Open Uniquery Panel: With Uniquery already launched (as outlined in Step 1), you should see the Uniquery panel on the right side of your Google Sheets interface.
API URL Field: Locate the field labeled as 'API URL’ or similar. Here, you will paste the API URL you obtained from the Facebook for Developers site. This URL directs Uniquery where to send the request for your ads data.
Access Token Field: Look for a field typically labeled as 'Access Token’, 'API Key', or 'Bearer Token’. This is where you input the Access Token obtained from Facebook. The Access Token authenticates your request, proving to Facebook that you have authorization to access the data.
Guidance and Tips:
Ensure Accuracy: Double-check that you’ve correctly copied and pasted the API URL and Access Token to avoid authentication errors or data retrieval issues.
Consider Security: Access Tokens are sensitive pieces of information. Ensure that you're not sharing your spreadsheet with access tokens with unauthorized individuals.
Use Uniquery's Customization Options: Uniquery often offers additional fields or options allowing you to further specify the data you wish to import, such as specific metrics, date ranges, or filters. Utilize these to tailor the imported data to your analysis needs.
Following these detailed steps for entering your API details into Uniquery, you're set to securely and efficiently import your Facebook Ads data into Google Sheets. This process streamlines data analysis, aiding in strategic decision-making and optimization of your advertising campaigns.

Skip to content
Uniquery
Uniquery

Uniquery API Connector
Integrations
Pricing
Knowledge Base
Support
Uniquery API Connector for Google Sheets
Import data directly to your spreadsheet
Get for Free
⚡Trusted by over a million users
⚡ Free, with paid upgrade available
⚡ Designed for spreadsheet users, no coding required
⚡ Built-in library filled with hundreds of ready-to-use APIs

Serving 1 million professionals at these great organizations & many more:

23andme logo binance logo chargebee logo coinbase logo ebay logo
google logo groupm logo hubspot logo loreal logo monday logo
I use Uniquery API Connector to create automated monitoring tools for SEO. It opens a universe of possibilities with a very limited and efficient toolchain. Uniquery API Connector is reliable, glitch-free, and production-ready.

⭐⭐⭐⭐⭐
EVGENIY ORLOV
SEO Team Lead, Mediaworx
Uniquery API Connector is an amazing product that enables a non-coder to leverage the power of APIs and integrate seamlessly with Google Sheets. It opens up a great deal of opportunities without the need to invest in expensive BI or ETL tools.

⭐⭐⭐⭐⭐
ERIC ANG
Director, One Search Pro Marketing
Uniquery API Connector is the easiest and fastest way to create an API-based website on WordPress. By pairing it with WP All Import to import the data, I launched a course discovery platform with no coding needed.

⭐⭐⭐⭐⭐
ADRIAN NUTIU
Founder, MadBright
Uniquery API Connector is awesome. It allows us to integrate and automate Shopify, Xero, Facebook, Cin7 and so much more.

⭐⭐⭐⭐⭐
BEN MULLER
Founder, Dock & Bay
We are using Uniquery API Connector for a variety of reports, mainly with Shopify. The documentation and examples on the Uniquery website are extremely helpful. Highly recommended for anyone who wants to automate reporting.

⭐⭐⭐⭐⭐
SIMON KÖSTLER
Co-Founder, STUR Cookware
Uniquery API Connector allows us to compile data from all of our marketing channels into a single location effortlessly. The documentation is very clear and Ana provides extremely good customer support.

⭐⭐⭐⭐⭐
BRANDON WILKES
Digital Marketing Manager, The Big Phone Store

100+ integrated applications
Start quickly with a built-in directory of popular and useful applications.
More info >

Create custom requests
Connect to almost any API using a no-code interface.
More info >

apiconnector-custom
apiconnector-requestlist
Combine metrics
Easily view and manage data from multiple data sources in a single place. No manual exports, custom scripts, or expensive data warehouse required.

Schedule requests
Automate your reporting. Set triggers to pull from APIs at hourly, daily, weekly, or monthly intervals. More info >

apiconnector-triggerdropdown
apiconnector-usecells
Use cell values in requests
Turn spreadsheet cells into variables. Achieve dynamic, code-like capabilities by basing request URLs on the cells in your sheet.
More info >

Connect to (almost) anything
Pulls data into Google Sheets from any platform that uses API keys or OAuth2 for authorization and returns data in JSON, XML, or CSV format. This opens up access to nearly any platform, e.g. CoinGecko, CoinMarketCap, Facebook, Shopify, etc.

Spreadsheets made simple
Made specifically for reporting and spreadsheets. Includes spreadsheets-first features like append vs. overwrite modes and building API requests based on the value in a cell. Use the built-in API directory for even faster setup.

Free and premium plans
The free version of Uniquery API Connector includes 100 monthly API requests and many powerful features for working with APIs. The paid plans allow more requests, scheduling, and more. Please view the pricing page for details.

Get for Free
Questions?
Check out the knowledge base, send us a message, or submit your question in the Uniquery API Connector user community.

Support
Knowledge Base
Support Forum
Contact
Company
About
Terms and Privacy
Affiliates
Social
LinkedIn
YouTube
Blog
Tools
Basic Auth Generator
JMESPath Expression Tester
FB Insights API URL Builder
Skip to content
Uniquery
Uniquery

Uniquery API Connector
Integrations
Pricing
Knowledge Base
Support
Search the documentation...

Search
Get Started
Create a Request
Edit Fields
Print Request Metadata
Print Timestamp
Scheduling
Set Data Destination
Set Output Mode
Set Output Options
Set Report Style
Custom Requests
Connect to an OAuth API
Create a Custom Request
Include Headers
Include Request Bodies
Set Request Method
Use Cell Values in Requests
Advanced Features
Create a Custom OAuth Connection
Flatten Fields to Columns
ImportAPI Custom Function
JMESPath Filtering
Multi-Query Requests
Pagination Handling
View Raw API Response
Manage Requests
Duplicate Requests
Export API Requests
Import API Requests
Import Curl Requests
Request Logging
Help
Account Management
Error Messages
Frequently Asked Questions
Troubleshooting
Troubleshooting Triggers
Step-by-Step API Guides
Import 3Commas Data to Google Sheets
Import Abstract API Data to Google Sheets
Import AccuWeather Data to Google Sheets
Import ActiveCampaign Data to Google Sheets
Import AdRoll Data to Google Sheets
Import AfterShip Data to Google Sheets
Import Ahrefs Data to Google Sheets
Import Airtable Data to Google Sheets
Import Alpha Vantage Data to Google Sheets
Import API-Football Data to Google Sheets (RapidAPI)
Import AppsFlyer Data to Google Sheets
Import Asana Data to Google Sheets
Import BambooHR Data to Google Sheets
Import Basecamp Data to Google Sheets
Import BaseLinker Data to Google Sheets
Show all articles ( 158 )
Projects
Construct a CRM Dashboard in Google Sheets
Convert Latitude-Longitude Data to Addresses in Google Sheets
Facebook Marketing API Request URL Builder
Free Crypto APIs for Google Sheets
Get Product Cost From Shopify API in Google Sheets
Introduction to APIs
What is a GET Request?
What is a POST Request?
What is an API Header?
What is an API Request Body?
What is an API Request Method?
What is an API URL?
What is an API?
What is API Authentication?
Print
Create a Request
Last Updated On
January 3, 2024
by
Ana
< Knowledge Base
Uniquery API Connector includes a built-in directory of popular and interesting APIs. For this quick start, we'll fetch data from one of the preset integrations available through the directory.

If you'd prefer to create your own custom API request, please check this article: Create a Custom Request
If you like videos, also check out this video guide to using Uniquery API Connector.

Contents
Before You Begin
Step 1: Open the Sidebar
Step 2: Add a New Request
Step 3: Select an API
Step 4: Set Authentication
Step 5: Select an Endpoint
Step 6: Set Parameters
Step 7: Set a Destination Sheet
Step 8: Choose Output Options
Step 9: Edit Fields
Step 10: Name and Run
Before You Begin
Click here to install the Uniquery API Connector extension from the Google Marketplace.

Step 1: Open the Sidebar
After installing the plugin in Google Sheets, click Extensions > Uniquery API Connector > Open

Step 2: Add a New Request
Once the sidebar opens, click Create request to start a new request.
quickstart-create-request

Step 3: Select an API
To access the directory, browse or search for an application in the application menu.

This image has an empty alt attribute; its file name is api-library-search.jpg
Step 4: Set Authentication
Authentication requirements will vary by API:

Open APIs don't require any authentication at all. They are marked with a green "unlocked" icon.
api-library-unlocked
OAuth APIs can be connected to by clicking a blue Connect button.
PREMIUM
api-library-connect-button
Some APIs require header keys or tokens. In these cases, enter the value into the input field. Additional instructions are provided in the Auth Info link.
api-library-auth-info
Some APIs use query string parameters. These can be entered in the parameters section.
api-library-auth-key
Step 5: Select an Endpoint
Each API's data is organized into endpoints, which can be thought of as individual data sets or tables. Select an endpoint from the dropdown menu.

This image has an empty alt attribute; its file name is api-library-endpoints.jpg
Step 6: Set Parameters
All available parameters will appear below the associated endpoint. Any required parameters will be marked as such, while other parameters can optionally be used to filter and customize the response data.

api-library-parameters
Step 7: Set Destination Sheet
Enter a destination sheet or click Set current to send the response data to the currently focused cell.

This image has an empty alt attribute; its file name is api-library-destination.jpg
Step 8: Choose Output Options
(optional) Click the Output options button and customize your request. Options include setting the output mode to overwrite vs. append, choosing a report style, applying pagination, and more.
customrequest-options

Step 9: Edit Fields
(optional) Click the Edit Fields button to preview your request. This will bring up a preview window where you can map fields to specific columns and choose which fields to display in your sheet.
customrequest-editfields

For more information on the visual field editor, see here: Edit Fields

Step 10: Name and Run
Give your request a name and click Run.

This image has an empty alt attribute; its file name is api-library-run.jpg
Questions?
Please leave a comment below, contact support, or leave a message in the Uniquery API Connector user community. You'll receive a response shortly.

﻿

Next 
Edit Fields
53 thoughts on “Create a Request”
Stefan
July 22, 2022 at 7:41 pm
Hi Ana
Great Add on to Sheets, Thanks a lot for providing!
I d like to use Uniquery API Connector with my Kraken Account. I have created a API privat Key there. But now using it, trying to find the url and the right way to paste the PRIVATE Key the in the correct fields. Can You help?

Reply
Ana
July 23, 2022 at 12:38 am
Hi there, Kraken's API requires a more complex form of authentication than a key to access private data, you can see their requirements here. They require that you apply the HMACSHA512 hashing algorithm to a signature generated with your private key, nonce, encoded payload, and URI path. So you'll need a script or connector developed for Kraken as we dont have native support for that, sorry.

Reply
ADNAN BHUIYAN
November 25, 2022 at 4:23 pm
how should I get the private data Ans the complex authentications than a key to access private data, you can see their requirements here. They require that you apply the HMACSHAA512 so you'll get the all URL l path and the authentications key and the access private key from the data you can see their requirements here

Ana
November 26, 2022 at 2:26 am
Sorry, I'm not sure I understood this, can you please restate the question?

Paha
December 16, 2022 at 8:17 pm
Hello.
Thanks for the great addition!
Can you please tell me how to auto-update once every 5 minutes?
Thanks.

Reply
Ana
December 17, 2022 at 1:03 am
Sorry, we only offer 1x per hour max scheduling. You could create an IMPORTAPI request and set the sheet to update every minute, though.

Reply
Anonymous
December 17, 2022 at 6:49 am
Hello.
Thanks for the answer. But I can't find information about the IMPORTAPI request anywhere. If you don't mind, could you tell me more about how to do it? This may be useful to future readers of this article.
I will be very grateful to you)

Ana
December 17, 2022 at 8:27 am
Sure, you can read about IMPORTAPI here: https://Uniquery.io/knowledge-base/importapi-custom-sheets-function/

Anonymous
December 17, 2022 at 8:43 am
I got it. thank you very much!

Ronnie
February 18, 2023 at 9:22 pm
Hi friends! really excited about this extension. I will try to connect my federal user account to the System for Award Management /SAM.gov. I am a government contractor and use various government websites to get reports on opportunities and perform market research, among other things Open.gsa.gov is where all of these APIs are. Hope Im able to finally connect with these data services that they offer to federal account users like myself.

Reply
Ana
February 20, 2023 at 11:50 am
Thanks, Ronnie! https://open.gsa.gov/api/ looks like an amazing resource, thanks for sharing it.

Reply
iamPaul
February 28, 2023 at 10:37 pm
HI when i get to the guide step that says Edit Fields, the Google sheets is named and ready to go but clicking edit Fields gives an error when it tries to connect the data sets to start mapping, do you know why there is an error here?

1) ABCVisitorsLog: Completed with errors
- We received an error from googleapis.com (403) show response
{ "error": { "code": 403, "message": "Request had insufficient authentication scopes.", "status": "PERMISSION_DENIED", "details": [ { "@type": "type.googleapis.com/google.rpc.ErrorInfo", "reason": "ACCESS_TOKEN_SCOPE_INSUFFICIENT", "domain": "googleapis.com", "metadata": { "method": "google.analytics.data.v1beta.BetaAnalyticsData.RunReport", "service": "analyticsdata.googleapis.com" } } ] } }
OK

Reply
Ana
March 1, 2023 at 2:42 am
This generally means you haven't allowed Uniquery access to the permissions it needs to run the request. Can you please disconnect and reconnect to GA, making sure to tick any checkboxes that appear in the login modal, as well as Allow?

Reply
mark anthony canuto
March 2, 2023 at 8:54 am
good

Reply
Greg
March 17, 2023 at 9:26 am
Hi,

I'm not sure if it's my configuration but I seem to only be able to get short responses (30 characters or less).

Any limits that I'm unaware of or anything you can point me in the direction of?

Amazing tool, very excited to get stuck in.

Thanks,

Greg

Reply
Ana
March 17, 2023 at 10:35 am
I'm not totally sure what this is in reference to, but it sounds like it might be OpenAI :). In that case, can you please increase the value in the token parameter?

Reply
Greg
March 17, 2023 at 12:55 pm
Hi Ana,

Yes, it certainly is Open AI. Thanks for mindreading .

Ok, I'll try that now. I do seem to be getting far better results now with max_tokens set to 2000 vs the default of 18.

Thanks for your help!

Jeff
March 21, 2023 at 12:49 pm
Can you create a Request URL, or part of a URL, based on data from a given Sheet/Cell?

Reply
Ana
March 21, 2023 at 1:46 pm
Sure, just wrap the cell reference piece with 3 plus signs, like this: +++Sheet1!A1+++
More info: Use Cell Values in Requests

Reply
Alma
April 14, 2023 at 2:18 am
Hi Ana! I am trying to connect to Altegio API (https://developer.alteg.io/api). It is not on the list of apps available in the dropdown. Can I still use Uniquery API Connector to set it up?

Reply
Ana
April 14, 2023 at 3:14 am
Hey Alma, sure, Uniquery API Connector connects to almost any API, though each API may have its own requirements. In this case, Altegio's docs say that you'll need to do the following:
1. Contact their support to get a "partner key"
2. Once you get it, use that partner key to get a user key as described here
3. Run data requests by including both keys in a header where Key= Authorization, Value = Bearer your_partner_token, User your_user token

Feek free to reach out to our support if you need help with any of the above steps.

Reply
Julien
April 29, 2023 at 5:50 pm
Hi, I use a platform for print on demand called Gelato, here is their documentation for their api https://dashboard.gelato.com/docs/
Can you walk me through how I can connect it so that I pull number of orders and product costs?

Reply
Ana
April 30, 2023 at 3:45 am
Sure, looks like you need to first get an API key by logging into Gelato and clicking Developer > API Keys
Then open Uniquery API Connector and set up your request like this:
Application: Custom
Method: POST
Request URL: https://order.gelatoapis.com/v4/orders:search
Headers:
Key = X-API-KEY, Value = your_api_key
Request body: {"financialStatuses":["paid"],"limit":100}

In the request body, you can also include other filtering parameters like dates as shown in their docs.

Reply
Rogier
May 16, 2023 at 2:38 pm
Hi, really useful for our reporting! Thanks for all the hard work. One question: the 'CostinLocalCurrency' pulls in the amount spend in a certain period, however the data is not being read as a currency. 927.06 euro is being displayed as 9270599999999990. Any ideas how to fix this in the spreadsheet or in the api?

Reply
Ana
May 16, 2023 at 3:53 pm
Thanks, Rogier! Uniquery API Connector prints out whatever the API sends back, so it looks like this API returns data in units of less than a cent (you can verify by clicking Edit fields and viewing the raw API response). To correct for this, I suggest setting the data destination to cell B1, and then adding the following formula to cell A1: =arrayformula(if(B1:B<>"",B1:B/10000000000000,"")). Change B1:B to whichever column holds your CostinLocalCurrency value. Note that this is in array formula so you only need to enter it in one cell only. It will automatically apply itself down the entire column, converting each value to the level of decimal you're looking for.
Update: You can now use formulas directly within Uniquery API Connector (https://Uniquery.io/knowledge-base/choose-and-edit-fields/#editfields-formulas)

Reply
Luis
May 24, 2023 at 5:47 pm
Hello, can I connect my amazon and mercadolibre accounts? I want to see my sales and advertising 🙂

Reply
Ana
May 24, 2023 at 6:09 pm
Sorry, Uniquery API Connector doesn't currently support connecting to Amazon, since they have some complex custom auth requirements. For Mercadolibre you should be able to do it with a custom OAuth connection, I wrote some info about it here.

Reply
Luiz
May 26, 2023 at 6:04 pm
Hi, i'm trying to connect to a custom API that requires a JSON be sent as a raw body to the GET request and I was unabled to find a way to do this with the Uniquery API Connector.

Is there something i'm missing or is this a not supported feature?
Will this option be added in the future?

Here's a cUrl example of what i'm trying to do:
curl --location --request GET 'API-URL' \
--header 'Authorization: Basic AUTH-TOKEN' \
--header 'Content-Type: application/json' \
--data-raw '{"paginator": {"page": "0","size": "50"}}'

Reply
Ana
May 26, 2023 at 6:16 pm
Hey Luiz, Uniquery API Connector doesn't support GET requests with request bodies. That's a very unusual requirement for an API, is it possible to share a link to their documentation? I'm curious why they've structured their API this way (and wondering if it's something we should support in the future).

Reply
Sunil Siwach
June 14, 2023 at 11:10 am
Hey,

I am not able use Uniquery API Connector. After install Uniquery API Connector Help button show only.

How to fix it.

Please suggest

Reply
Ana
June 14, 2023 at 11:11 am
That’s just a temporary glitch on Google’s side. Please refresh your sheet once or twice and you should see the full menu appear.

Reply
Daman
June 19, 2023 at 4:49 am
Hello
In my google Sheet there is not show Uniquery API Connector after i click extension bottom.

Reply
Ana
June 19, 2023 at 5:22 am
If you've installed Uniquery API Connector but don't see it, make sure you're logged into Sheets with the same Google account from which you installed it. Also, refresh your sheet as sometimes Google has a glitch in which extensions don't show up the first time you load your sheet. If you're still having issues, please feel free to contact support.

Reply
Ahmet
June 22, 2023 at 10:45 am
Hello,
My api provider can give me 100 records at once. So I have to set the start id too, which requires me to change the api url.
Can I add a cell reference in sheet where I specify the api url? So I can fetch new records every time I refresh.

Reply
Ahmet
June 22, 2023 at 10:55 am
Oh, I just saw the IMPORTAPI function. You've already done much more than what I needed. you are awesome.

Reply
Ana
June 22, 2023 at 10:55 pm
Great, and I think you can check out pagination handling too as that is designed specifically for cycling through multiple pages of data.

Don Scattergood
July 30, 2023 at 4:02 pm
Hi all -
Is there a way to use a Sheet cell reference in the API call? I want to populate a column on the spreadsheet based on data related to another cell, in this particular instance getting the publicity image for a movie from the iMDB RapidAPI database based on the movie name in the A column. Thanks in advance

Reply
Don S
July 30, 2023 at 4:04 pm
Sorry, just saw the "Use Cell Values In Request" topic. As we've all often said, "RTFM buddy!"

Reply
Ana
July 31, 2023 at 2:00 am
hahahha, I would not have said that! 😀 But I'm glad you found it, and just let me know if anything isn't clear.

Reply
Hiba
August 31, 2023 at 3:42 pm
Hi. Once the data is filled into the sheets successfully does a new row add itself automatically everyday? Or do I have to click 'run' every time I want the new insights to be visible?

Reply
Hiba
August 31, 2023 at 3:52 pm
Just realized that I have to create trigger for that on the 'Schedule' tab. But, for instance, the Fb Posts Request only gives 100 posts. So next time it's triggered to run it'll overwrite the previous data and give me the next 100 posts making me lose that last 100 ones? Or will it write below them so I now have 200 posts' data?

Reply
Hiba
August 31, 2023 at 3:54 pm
Just came across the 'append' option!

Ana
September 1, 2023 at 2:16 am
Great! Yes, you can choose whether to append, overwrite, or merge your data. Feel free to contact us if you'd like more specific help or further clarification.

Gloria
October 26, 2023 at 8:04 pm
Hello! I love this!! How do I format a number field? I'm getting 2000 instead of 20.00. Using Etsy integration.

Reply
Ana
October 27, 2023 at 6:53 am
Thanks, Gloria! Uniquery API Connector just returns the data as it comes back from the API, and they return the data using the smallest unit (i.e. cents), such that $20 is represented as 2000. To convert it to 20.00, I suggest setting a data destination of cell B1, and then entering the following formula into cell A1: =arrayformula(if(B1:B<>"",B1:B/100,""))
Where it says B1:B, replace B with the column letter containing your number field. This will automatically apply itself all the way down your sheet so you only need to enter it once.
Update: You can now use formulas directly within Uniquery API Connector (https://Uniquery.io/knowledge-base/choose-and-edit-fields/#editfields-formulas). Dividing by 100 is on the list as a preset.

Reply
Gloria
November 2, 2023 at 1:49 am
Thanks so much Ana!!

Danny G
November 2, 2023 at 6:23 pm
Hello All,
I am getting this message in google sheets when i try and open Uniquery API Connector. "Message details
We're sorry, a server error occurred while reading from storage. Error code PERMISSION_DENIED."
Thank you
Danny

Reply
Ana
November 3, 2023 at 1:05 am
That's an error message from Google, and, based on this, I believe it's related to being signed into multiple Google accounts at the same time. Can you please try opening the extension in an incognito browser session or a separate Google Chrome profile?

Reply
Danny G
November 3, 2023 at 7:05 pm
Working now. Thank you

Zohar
February 24, 2024 at 7:46 am
Is it possible to use Uniquery API Connector to connect to interactive brokers client portal api? I was able to connect without Uniquery API Connector and to get requests in json data but with Uniquery API Connector I get an error:
Completed with errors
- DNS error: https://localhost:5000/v1/api....
two-factor authentication is mandatory for login. Is it safe to get this kind of data using Uniquery API Connector?

Reply
Ana
February 25, 2024 at 6:04 am
Hi Zohar, there is no way for Uniquery API Connector to connect to a localhost address, as it can only connect to webhosts available through the internet. As for Interactive Brokers in general, I found this page on their site which says they authenticate using the old OAuth 1.0 standard, which isn't supported by Uniquery API Connector, so I don't think you can connect to them through our connector (Uniquery API Connector currently only supports OAuth 2.0 and API keys/tokens).

Reply
Jason
February 26, 2024 at 12:52 pm
In Google Sheets, suddenly the Uniquery API Connector is not working, I keep getting #NAME? error, it's not working, please help.

Reply
Ana
February 26, 2024 at 12:55 pm
Google is currently experiencing an outage that affects all extensions. Hopefully they will resolve it soon, as in the meantime we can only wait. Please check here for updates: https://support.cloud.google.com/portal/system-status?product=WORKSPACE

Reply
Leave a Comment
Comment

Name
Name
Email
Email
Jump To
Contents
Before You Begin
Step 1: Open the Sidebar
Step 2: Add a New Request
Step 3: Select an API
Step 4: Set Authentication
Step 5: Select an Endpoint
Step 6: Set Parameters
Step 7: Set Destination Sheet
Step 8: Choose Output Options
Step 9: Edit Fields
Step 10: Name and Run
Questions?
Support
Knowledge Base
Support Forum
Contact
Company
About
Terms and Privacy
Affiliates
Social
LinkedIn
YouTube
Blog
Tools
Skip to content
Uniquery
Uniquery

Uniquery API Connector
Integrations
Pricing
Knowledge Base
Support
Search the documentation...

Search
Get Started
Create a Request
Edit Fields
Print Request Metadata
Print Timestamp
Scheduling
Set Data Destination
Set Output Mode
Set Output Options
Set Report Style
Custom Requests
Connect to an OAuth API
Create a Custom Request
Include Headers
Include Request Bodies
Set Request Method
Use Cell Values in Requests
Advanced Features
Create a Custom OAuth Connection
Flatten Fields to Columns
ImportAPI Custom Function
JMESPath Filtering
Multi-Query Requests
Pagination Handling
View Raw API Response
Manage Requests
Duplicate Requests
Export API Requests
Import API Requests
Import Curl Requests
Request Logging
Help
Account Management
Error Messages
Frequently Asked Questions
Troubleshooting
Troubleshooting Triggers
Step-by-Step API Guides
Import 3Commas Data to Google Sheets
Import Abstract API Data to Google Sheets
Import AccuWeather Data to Google Sheets
Import ActiveCampaign Data to Google Sheets
Import AdRoll Data to Google Sheets
Import AfterShip Data to Google Sheets
Import Ahrefs Data to Google Sheets
Import Airtable Data to Google Sheets
Import Alpha Vantage Data to Google Sheets
Import API-Football Data to Google Sheets (RapidAPI)
Import AppsFlyer Data to Google Sheets
Import Asana Data to Google Sheets
Import BambooHR Data to Google Sheets
Import Basecamp Data to Google Sheets
Import BaseLinker Data to Google Sheets
Show all articles ( 158 )
Projects
Construct a CRM Dashboard in Google Sheets
Convert Latitude-Longitude Data to Addresses in Google Sheets
Facebook Marketing API Request URL Builder
Free Crypto APIs for Google Sheets
Get Product Cost From Shopify API in Google Sheets
Introduction to APIs
What is a GET Request?
What is a POST Request?
What is an API Header?
What is an API Request Body?
What is an API Request Method?
What is an API URL?
What is an API?
What is API Authentication?
Print
Troubleshooting
Last Updated On
March 12, 2024
by
Ana
< Knowledge Base
While using the Uniquery API Connector add-on for Google Sheets, there may be cases where your API request doesn't work, or returns an error message. This article will describe some known issues and ways to troubleshoot issues with your API requests.

Related article: Error Messages
Contents
Add-on Loading Continuously
Add-on Menus Don't Work
Authorization Errors
Cookies
Duplicate Data
Error Messages
Extensions Menu Greyed Out
Formulas Overwritten
Inconsistent Column Order
Inconsistent Row Order
Incorrect Content-Type
Missing Fields
Missing Records (Pagination)
Non-JSON/CSV/XML Response Types
Paid Account Not Recognized
Quotas and Limits
Rate Limits
Request Syntax Errors
Requests Timing Out
Restricted User Agent
Restricted IP Address
Scheduling Issues
Sidebar Doesn't Scroll
Wrong Format
Wrong Format (Currency)
Other
Add-on Stuck at Loading
api-connector-loading-stuck
If you see a screen like this after hitting Edit or Create request, it's likely because Google doesn't support multi-login (being logged into multiple Google Accounts at once) for Sheets extensions. To resolve, log out from all Google accounts and log back in first with the account you're using with Google Sheets (you can log back into your other accounts after) or re-open Sheets + Uniquery API Connector in a new incognito window.

If you're using Safari, this same issue may cause the entire add-on interface to be blank white instead.

Add-on Buttons & Menus Don't Work
Issues with unresponsive or frozen buttons and menus indicate a problem with your browser. We've seen problems related to Brave browser, aggressive pop-up blockers, and other browser extensions that produce conflicts or block various functionality.

Solution

To address, run through the following suggestions. The exact cause of the issue depends on your browser, so you may need to try multiple suggestions from this list.

Run Uniquery API Connector in incognito/private browser mode, or a separate Chrome profile
Run the add-on in another browser
Disable pop-up blocking in the browser
Chrome: https://support.google.com/chrome/answer/95472
Firefox: https://support.mozilla.org/en-US/kb/pop-blocker-settings-exceptions-troubleshooting
Disable all extensions and re-run. In Chrome, you can view all your browser extensions by clicking the three-dot menu in the top right of your browser and navigating to More tools > Extensions.
Clear cache and cookies
Chrome: click here 
Firefox: click here 
Edge: click here 
Safari: click here 
Authorization Errors
Make sure you've entered any required authorization credentials into the Headers table, and that you've encoded them to Base 64 if basic access authentication is required.

Cookies
Uniquery API Connector can't access and attach cookies to your request. This means that Uniquery API Connector will not work with any API that requires cookies.

Duplicate Data
There are a few configuration issues that can lead to duplicate data in your report:

Multiple requests running and printing data into the same sheet. Double check requests and triggers to make sure only one request is sending data to the report.
Re-fetching data that already exists in the sheet. When using append mode, make sure the request is configured so that it doesn't pull in duplicate data. More information >
Merge mode may produce duplicate records if the merge key hasn't been set correctly. More information >
Error Messages
Pay attention to any error details as they will alert you to specific fields that need to be addressed. This article on Error Messages provides more details on each message.

Extensions Menu Greyed Out
The Extensions menu may be inaccessible / greyed out in Google Sheets. The most common reason is because the user does not have high enough access to the sheet. To resolve, grant Edit access to the affected user.

Formulas Overwritten
By default, all data will be cleared to the right and below the starting cell.

If you are including calculations and formulas in your sheet, we recommend adding them into columns on the left. Then you can set a destination cell to the right of those formulas, such that they don't get overwritten.

Inconsistent Column Order
In some cases, an API returns data in a different order, or doesn't send keys that aren't populated with values, resulting in mismatched column orders between pulls.

The easiest way to keep columns in place is to click Edit fields after creating your request. This will open the visual field editor, where you can choose the fields you'd like to display in your sheet and map them to a specific column.
troubleshooting-editfields

Alternative methods include:

re-arrange data with a JMESPath expression
query individual columns by name into a second sheet using this Sheets function, replacing data with your sheet name, and field_name with your field name: =QUERY(data!$1:$10000,"SELECT "&SUBSTITUTE(ADDRESS(1,MATCH("field_name",data!$1:$1,0),4),1,""),1)
Inconsistent Row Order
Most APIs don't send row data back in a fixed order. They may apply a default sort order, for example alphabetical, or perhaps largest to smallest, in which case new values will be inserted into the response data as the data set updates. Other APIs send data back in an entirely random order.

By default, Uniquery API Connector prints out the data as it gets returned, so if the record order changes between API fetches, the row order will change as well.

If you would like to create a fixed table in which the row order doesn't change, there are 2 main approaches:

Pull the API response data into a raw data sheet, and then create your table in a second tab. Use native Google Sheets functions like VLOOKUP, XLOOKUP, or MATCH to fetch data from the raw data sheet into your data tab. This way it doesn't matter how the API sends back data, or if the rows get rearranged, since data will be ordered based on the lookup value.
Use Uniquery API Connector's merge mode to update your table. When you use merge mode, values in your sheet will retain their position. However, any new values will be appended to the end of your sheet, which may not be what you're looking for.
VLOOKUP is probably the most common and easily applied solution to bring data from one table to another, while keeping the row order the same. It also allows for a separation between the data layer and the presentation layer, as you can create a nicely formatted table that doesn't get overwritten. Here is Google's official documentation on VLOOKUP; there are many online guides and videos as well.

Incorrect Content-Type
When making POST requests, we tell the server how to parse the content using a content-type header that describes the object’s format. For example, Uniquery API Connector may automatically set the content type to application/x-www-form-urlencoded, so you don't have to set it yourself. If your server expects a different content type, you can manually set the content type to override it, by adding key/value pairs to the Headers table.

Missing Fields
Uniquery API Connector is a pipeline connecting APIs to Google Sheets and in general prints out whatever the API returns. Therefore, if you're not seeing fields that you expect, first check the raw API response and confirm that the API has indeed sent back the fields you're looking for. If not, you will need to check the API documentation and adjust your API request configuration.

If you see fields in the raw response but not in your sheet, you may have inadvertently applied a JMESPath filter or a field mapping that filters them out. To remove these, check the following:

Click Output options > JMESPath and remove any JMESPath expression
Click Edit Fields > Refresh Fields to reset any field mapping
Missing Records (Pagination)
By default, many API servers return only a limited number of rows in each response. This is known as "pagination". To retrieve data you need to fetch data page by page.

In Uniquery API Connector, you can automatically loop through paginated responses using pagination handling (paid feature).

Non-JSON/CSV/XML Response Types
Uniquery API Connector supports all three major data formats: JSON, XML, and text/CSV. If you request data in another format, apply JMESPath that converts the response into a non-JSON/CSV/XML format, or request a 'regular' HTML website URL rather than an API endpoint, the request won't work as expected.

Paid Account Not Recognized
If Uniquery API Connector doesn't recognize your upgraded account status after purchase, try the following:

Click the Account icon in the footer of Uniquery API Connector to update the cache and force a refresh of your account status.
Double-check that you're using the same email address you entered into the purchase form. You will need to be logged into Sheets with the same email address that purchased the license.
Quotas and Limits
The API you're accessing may limit the number or rate of requests. Google Sheets itself also has built-in limits, as documented here: https://developers.google.com/apps-script/guides/services/quotas. There is a limit of 20,000 API calls quota per day per user, per sheet.

To avoid inadvertently reaching these limits, limit triggers and queries where possible (e.g. don't run hourly refreshes if you only need daily). Since these limits are per user, you may also hit the API limit if you're running your own custom scripts or functions in addition to requests from Uniquery API Connector.

Rate Limits
Many APIs limit the number of requests you can send per minute. Generally Uniquery API Connector doesn't hit these limits as it automatically inserts 2 second delays between stacked or paginated requests. However, there are two scenarios where it's more likely to run into rate limits:

when using popular, open APIs. Open APIs often rate limit by IP address, and large numbers of people use these APIs to pull data to Google Sheets. All requests in Google Sheets run through Google's shared IP address pool at the same time, such that rate limits can be triggered even when you personally aren't running a large number of requests. Because of this, it's generally best to find APIs limited by API keys rather than IP address.
The IMPORTAPI custom function can rapidly fire off large numbers of requests. Please apply IMPORTAPI carefully or use the standard sidebar method to avoid these issues.
Request Syntax Errors
When you're reading API documentation, you'll likely see examples based on different coding languages. Don't copy these in directly -- Uniquery API Connector is a no-code method of interaction with APIs, so pasting in code snippets won't work.

Wrong: https://api.football-v1.com/v2/players/player/{player_id}
Right: https://api.football-v1.com/v2/players/player/29
Just type in the URL, any headers, and other options. Check the knowledge base for an example of what a completed API request looks like.

Requests Timing Out
Request processing time relates to both waiting for the server to respond and converting/processing the response into a tabular format for Sheets.

Therefore, if requests are timing out, first fetch the raw data from the server (click Output options > More > View API Response).

If the server responds normally (i.e. within a few seconds), then the the issue likely lies with converting the response into a table for Sheets. Very large or deeply nested data sets may cause Uniquery API Connector to time out or stop responding, due to Google Sheets' 6-minute per request limit.

Solution

To resolve this issue, try any or all of the following:

limit the size of your request. Most APIs let you limit request size via date- or ID-based query strings. You can usually use these query strings to fetch new data only instead of re-fetching an entire data set.
batch requests where possible, e.g. if you're fetching data for a list of product IDs, check if your API accepts a comma separated list of IDs in a single request, instead of sending 1 request per ID.
switch to 'compact' or 'grid' report style. The algorithm for the default single-row output takes a little longer to run, since it needs to process and flatten all the nested data into a single row.
if you are using pagination handling, set the request to stop running after 1 or 2 pages, to see if the issue lies with pagination settings (either too many loops, or improper configuration).
use the field editor or JMESPath filters to reduce the number of fields printed into your sheet.
processing time may increase if your sheet contains a lot of formulas that update as the API request changes cell values. Therefore, running your requests in a fresh new sheet may help.
split your request up into multiple requests that each fetch a portion of the data. If you created 4 tabs with 100 records each, you could then combine them all back into a single master sheet at the end with a formula like =unique(QUERY({'Page1'!A1:Z101; 'Page2'!A1:Z101; 'Page3'!A1:Z101; 'Page4'!A1:Z101}))  
Certain JSON structures produce a very large number of columns by default and time out the report. To fix this issue, use the Force rows option.
Restricted User Agent
Google Apps Script doesn't enable custom user agents. This means any request from Uniquery API Connector will use Google script's default user agent 'Mozilla/5.0 (compatible; Google-Apps-Script)'. Unfortunately certain APIs may block requests from Google's user agent.

To test if you're encountering this issue, you may test your request through a different API client like Postman. In the Headers section, input a Key of User-Agent, and a Value of Mozilla/5.0 (compatible; Google-Apps-Script) to replicate the setting automatically applied by Google Apps Script.


If you find that your request fails when using Google's user agent, you will need to ask the platform to lift this restriction on their API.

Restricted IP Address
All API requests through Apps Script (the scripting language used by Sheets) originate from a set pool of IP ranges associated with Google's servers. This may prevent a request from resolving if the API has blocked requests from Google's IP addresses, or if the API requires all IP addresses to be whitelisted in advance.

Google provides all the IP ranges used by Apps Script here. Each IP address shown is followed by a slash (e.g. 34.80.0.0/15), indicating that it represents a range. To see the full range represented by each entry, you can use an IP range conversion tool like the one here: https://www.ipaddressguide.com/cidr.

Scheduling Issues
If you are experiencing issues with your scheduled reports, please consult this list of troubleshooting tips specific to triggers: Troubleshooting Triggers

Sidebar Doesn't Scroll
When using the Firefox browser, the scroll bar may not work consistently.

To address, open the hamburger menu in the top right and navigate to Settings > General > Performance. Untick the Use recommended performance settings box, as well as the Use hardware acceleration when available box.
troubleshooting-firefox

Close and re-open Firefox, and scroll bars should work again.

After completing this, you can test re-enabling recommended performance settings.

Wrong Format
Uniquery API Connector prints out data as it's received. If the data output does not look as expected, that could be because of how the API has sent the data, or because of how Google Sheets has interpreted the format.

Sometimes you may be able to adjust the format by simply changing the formatting applied to the column in Sheets. In other cases, you may find it more effective to alter the data through a Sheets formula.

Tips for applying Sheets functions:

Apply Sheets functions directly to fields through the field editor: https://Uniquery.io/knowledge-base/choose-and-edit-fields/#editfields-formulas. This will let you pre-process the data before it gets printed into the sheet.
Alternatively, if you're adding functions after the data has already been printed into the sheet, add them into columns on the left. Then set the destination cell to the right of those formulas, ensuring the formulas don't get overwritten when the data refreshes.
If you're adding functions to your sheet, use array formulas where possible. Array formulas apply to the entire column so you don't need to copy them down as the data set expands.
Wrong Format (Currency)
Currency format issues are a common subset of the more general "Wrong Format" issue.

Uniquery API Connector prints out data in the format the API sends it, which sometimes causes a conflict with the settings of the sheet. For example an API may return data in the US format (e.g. $1,234.56), which displays strangely in a sheet set to a German locale.

To address, try the following:

Set the sheet locale to US as this is the most common format (File > Settings > Locale)
If changing the locale isn't convenient, you can instead apply a Sheets formula through the field editor to convert the data. For example, this function will convert all periods to commas, and vice versa, and can be selected from the preset formula menu: =substitute(substitute(substitute(E2;",";"#");".";",");"#";".")*1.
If you prefer to add it separately into your sheet, add the formula(s) into column A, and set the data destination to column B. This will prevent your formulas from getting overwritten. If you add the formula to your sheet rather than through the field editor, you can use an array formula like =arrayformula(if(E2:E<>"";substitute(substitute(substitute(E2:E;",";"#");".";",");"#";".");"")*1). When you use an array formula, you only need to enter it once (in, say, cell A2) as it will automatically apply to the entire column.
Other
Still having trouble? Check out the knowledge base or leave a post in the user community. You'll receive a response shortly!

 Previous
Frequently Asked Questions
Next 
Troubleshooting Triggers
24 thoughts on “Troubleshooting”
Brian
July 24, 2021 at 10:51 am
Ana, all my api calls have been working very well until yesterday.

I keep getting this error message:
Completed with errors
- Attribute provided with invalid value: Header:Redirect URL

This is the call: https://api.sky.blackbaud.com/school/v1/academics/schedules/sets/11286

It works perfectly on the developer's page of Blackbaud
Not sure what I should try next.

Thanks very much,

Brian

Reply
Ana
July 24, 2021 at 11:25 am
Is this a request that you've been running without issue for a while, or is it a new request? The "Attribute provided with invalid value" error generally means there's an incorrect header key, does your request contain a header called "Redirect URL"?

Reply
Ao
September 1, 2022 at 3:55 am
Hi Ana
I'm receiving the error message below
This seems new to me. Even running the script several times doesn't help (it used to)... :/
Has the script stopped working?
---
1) Data: Completed with errors
- We received an error from coingecko.com (429) show response
{"status":{"error_code":429,"error_message":"You've exceeded the Rate Limit. Please visit https://www.coingecko.com/en/api/pricing to subscribe to our API plans for higher rate limits."}}

Reply
Ana
September 1, 2022 at 4:30 am
Nothing has changed on our side, but CoinGecko is sensitive to rate limits.

Reply
Nicolas
September 19, 2022 at 2:41 pm
Hello Ana,

I use Uniquery on google sheet, when i try to edit my request, the loading fail and i get a screen with a cross.
is there trouble on your side ?

Reply
Nicolas
September 19, 2022 at 2:54 pm
found the solutio, 🙂

Regards

Reply
Ana
September 19, 2022 at 5:43 pm
Hey Nicolas, this sounds like it was the issue of being logged into multiple accounts at the same time. Glad you got it sorted out!

Mark Kim
November 19, 2022 at 10:30 pm
Hi

We are an accountancy firm that have multiple client companies that I wish to connect to google sheet to pull data from. It seems that I can only connect to one company and then have to disconnect the existing connections and create a new connection for another company. How do I create multiple Quickbooks connections ? (under OAuth)

Reply
Ana
November 20, 2022 at 12:08 am
Currently Uniquery API Connector only enables one connection per service, but support for multiple connections is coming very soon!

Reply
Ana
December 12, 2022 at 4:45 am
Update: multiple OAuth connections are now available (info).

Reply
MR Canh
December 21, 2022 at 12:19 pm
tôi đã gửi email về sự cố nhưng chưa được giải đáp . Có cả hình ảnh sự cố nhưng ở đây không có mục gửi ảnh lên . Xin check email để giúp đỡ tôi. Xin cảm ơn !

Reply
Ana
December 21, 2022 at 1:31 pm
I responded to you twice via email, please check your spam folder if you don't see it. You can also check our Binance documentation for more information on that error message.

Reply
Amos
January 12, 2023 at 2:45 pm
I have tried to follow step by step the process outlined here but once I run the request I created, the output it brings has column headers titled: count, next, previous, results:1 ...instead of exporting the data. What I'm I missing?

Reply
Ana
January 12, 2023 at 2:51 pm
Please hit Edit fields > View raw response and check the raw response from your API request. If you see data there and not in your sheet, then most like you've applied a filter, and can remove it as described here. If the data isn't there at all then there's an issue with the request itself and you'll need to edit your request URL/body.

Reply
Amos
January 15, 2023 at 4:57 am
True, there was an issue with my request which i rectified. Nonetheless I have also learnt how to edit fields in the process. Thanks Ana!

Ana
January 15, 2023 at 5:35 am
Nice, thanks for the update 🙂

ſ
July 17, 2023 at 10:02 am
In Google Sheets menu Extensions/Uniquery API Connector there's no "Open" for me, only "Help", and I can't even open the sidebar. What am I doing wrong?

Reply
Ana
July 17, 2023 at 10:21 am
I think that's just a temporary glitch on Google's side. Can you please refresh the sheet once or twice? It should show up then.

Reply
ſ
July 17, 2023 at 4:56 pm
Refreshes didn't help, but I tried again now and it works, thanks

Ana
July 17, 2023 at 5:49 pm
That's odd, I'm not sure what happened, but glad to hear it's working now.

IR
August 2, 2023 at 2:21 pm
Hello!
I am having trouble with the rows / columns placement of the archived data. I need the "fresh" data to be collected in the next columns, but whether I select rows or columns in the sidebar, this new data is added in the rows below the old data. The option "Paste To Next Empty Range" is checked. How can I solve this?
Thank you very much.

Reply
Ana
August 2, 2023 at 3:55 pm
This is a question about the Archive Data extension, not Uniquery API Connector, correct? I'm not sure why selecting "columns" isn't working, since that option is designed to add new data to the columns next to the old data. Can you please contact support with a screenshot of your setup or a link to your sheet?

Reply
Antonia
November 28, 2023 at 3:34 pm
Hello!

I hope this message finds you well. I am writing to seek assistance with an issue I'm currently experiencing with Google Sheets extension.

Issue Description:
- Inability to edit, run, or delete any requests within the extension.
- Inability in navigating between tabs in the extension interface.

Troubleshooting Steps Taken:
- Refreshed the Google Sheet multiple times.
- Completely closed and reopened Google Chrome.
- Attempted to access the extension on different sheets to check if the issue is isolated to a specific document.

Unfortunately, none of these steps have resolved the issue. I woul appreciate any guidance or solutions you could provide to resolve this issue.

Thank you in advance!

Reply
Ana
November 28, 2023 at 4:02 pm
Sorry for the inconvenience, this is a bug currently affecting all Chromium-based browsers (i.e. Chrome, Edge, and Brave). You can see updates on this issue in Google's bug tracker here: https://issuetracker.google.com/issues/313466551

Google has responded to that thread so hopefully they will fix the issue soon, but for now please try a different browser (Firefox or Safari).
Update: This issue has now been resolved.

Reply
Leave a Comment
Comment

Name
Name
Email
Email
Jump To
Contents
Add-on Stuck at Loading
Add-on Buttons & Menus Don't Work
Authorization Errors
Cookies
Duplicate Data
Error Messages
Extensions Menu Greyed Out
Formulas Overwritten
Inconsistent Column Order
Inconsistent Row Order
Incorrect Content-Type
Missing Fields
Missing Records (Pagination)
Non-JSON/CSV/XML Response Types
Paid Account Not Recognized
Quotas and Limits
Rate Limits
Request Syntax Errors
Requests Timing Out
Restricted User Agent
Restricted IP Address
Scheduling Issues
Sidebar Doesn't Scroll
Wrong Format
Wrong Format (Currency)
Other
Support
Knowledge Base
Support Forum
Contact
Company
About
Terms and Privacy
Affiliates
Social
LinkedIn
YouTube
Blog
Tools
Basic Auth Generator
JMESPath Expression Tester
FB Insights API URL Builder
Copyright © 2024 Uniquery, LLC | All Rights Reserved | 651 N Broad St, Suite 206, Middletown, DE 19709, USA


Skip to content
Uniquery
Uniquery

Uniquery API Connector
Integrations
Pricing
Knowledge Base
Support
Search the documentation...

Search
Get Started
Create a Request
Edit Fields
Print Request Metadata
Print Timestamp
Scheduling
Set Data Destination
Set Output Mode
Set Output Options
Set Report Style
Custom Requests
Connect to an OAuth API
Create a Custom Request
Include Headers
Include Request Bodies
Set Request Method
Use Cell Values in Requests
Advanced Features
Create a Custom OAuth Connection
Flatten Fields to Columns
ImportAPI Custom Function
JMESPath Filtering
Multi-Query Requests
Pagination Handling
View Raw API Response
Manage Requests
Duplicate Requests
Export API Requests
Import API Requests
Import Curl Requests
Request Logging
Help
Account Management
Error Messages
Frequently Asked Questions
Troubleshooting
Troubleshooting Triggers
Step-by-Step API Guides
Import 3Commas Data to Google Sheets
Import Abstract API Data to Google Sheets
Import AccuWeather Data to Google Sheets
Import ActiveCampaign Data to Google Sheets
Import AdRoll Data to Google Sheets
Import AfterShip Data to Google Sheets
Import Ahrefs Data to Google Sheets
Import Airtable Data to Google Sheets
Import Alpha Vantage Data to Google Sheets
Import API-Football Data to Google Sheets (RapidAPI)
Import AppsFlyer Data to Google Sheets
Import Asana Data to Google Sheets
Import BambooHR Data to Google Sheets
Import Basecamp Data to Google Sheets
Import BaseLinker Data to Google Sheets
Show all articles ( 158 )
Projects
Construct a CRM Dashboard in Google Sheets
Convert Latitude-Longitude Data to Addresses in Google Sheets
Facebook Marketing API Request URL Builder
Free Crypto APIs for Google Sheets
Get Product Cost From Shopify API in Google Sheets
Introduction to APIs
What is a GET Request?
What is a POST Request?
What is an API Header?
What is an API Request Body?
What is an API Request Method?
What is an API URL?
What is an API?
What is API Authentication?
Print
Create a Custom OAuth Connection
Last Updated On
November 24, 2023
by
Ana
< Knowledge Base
PREMIUM
If Uniquery API Connector does not provide a preset OAuth2 integration for your platform, you can add your own custom OAuth2 connection. Uniquery API Connector supports the two most common OAuth flows (aka grant types): Authorization Code and Client Credentials.

Contents
Before You Begin
What is OAuth 2.0?
Why Create a Custom OAuth Connection?
How to Add a Custom OAuth Connection
Step 1: Configure an App
Step 2: Prepare Uniquery API Connector
Step 3: Complete OAuth Form
Custom OAuth Example
How to Activate the Connection
Usage Notes
Appendix: Manually Retrieve Client Credentials Token
Before You Begin
Click here to install the Uniquery API Connector add-on from the Google Marketplace.

What is OAuth 2.0?
Most APIs require some kind of authorization. Frequently this involves entering an API key or token, which function similarly to passwords. OAuth2 is an alternative authorization framework that lets a user securely connect a third party to their account.

You've probably encountered OAuth2 before. It's the technology behind most "sign in with X" authorization flows.

Why Create a Custom OAuth Connection?
some APIs provide access only through OAuth 2.0, and do not enable API keys/tokens.
access APIs or scopes not available in our preset OAuth connections.
keep your connection totally secure. Only authorized users can connect through the Authorization Code flow, even if they have access to your sheet.
How to Add a Custom OAuth Connection
Step 1: Configure an App
To get started, you generally need to enter the developer section of your API platform and configure an "app". Some APIs may ask you to simply click a few buttons, while others will ask that you provide detailed information or a video walkthrough of the data you intend to access.
During this process, the API platform usually requests that you enter a redirect or callback URL. This is the redirect URL for Uniquery API Connector: https://script.google.com/macros/d/12COOkin8nodCH7fZGIBu0D2jWY8-AEA0uvElt4Ph4wRbLUD4wslqQUfG/usercallback
Once you've finished setting up your app, the API should provide you with a Client ID and Client Secret.
Step 2: Prepare Uniquery API Connector
After retrieving the Client ID and Secret, you can move on to setting up the connection in Google Sheets.

Open Google Sheets and enter the Manage Connections screen by clicking Extensions > Uniquery API Connector > Manage Connections, or by clicking the Manage Connections link on the Create screen.
customoauth-manageconnections
Once there, scroll to the bottom and click Add Custom OAuth:
customoauth-add
You will be presented with a screen containing input values for OAuth Grant Type, Name, Authorization Base URL, Token URL, Client ID, and Client Secret:
customoauth-addcustom
Step 3: Complete OAuth Form
Populate the input fields in the OAuth form as follows:

OAuth Grant Type: Choose whether you're using the Authorization Code or Client Credentials Flow.
Name: Choose a name for your custom connection and enter it in, e.g. "Custom BigQuery".
Authorization Base URL: This should be provided within the API's developer documentation, and usually contains the word "auth" or "oauth" somewhere in the URL. If required, include the scope parameter here.
The OAuth2 connection manager will automatically handle all the standard OAuth2 parameters: client ID, client secret, code, grant_type, redirect_uri, response type, and state. Therefore you generally don't need to add any parameters besides scope.
Token URL: This will also be provided within the API's developer documentation, and usually contains the word "token".
Client ID and Client Secret: These will be provided by the API as described above.
After you've entered your custom OAuth2 values, click Save. The custom connection will then appear on your list of Connections, where you can edit or delete the connection. For connections using the Authorization Code flow you can also click connect or disconnect to log in through the application's website.

Custom OAuth Example
Every API will work a bit differently, but let's look at the Google BigQuery API as an example of what to look out for.

Go to the Google API Console and register an app
When you finish registering the app, Google provides a client ID and a client secret.
bigquery-img13
Read the API documentation to find the authorization and token URLs. For Google BigQuery it would be these:
Authorization Base URL: https://accounts.google.com/o/oauth2/v2/auth?scope=https://www.googleapis.com/auth/bigquery/insights
Token URL: https://oauth2.googleapis.com/token
This site also has many articles containing complete examples of setting up custom OAuth connections:

Authorization Code Flow Examples

Import Basecamp Data to Google Sheets
Import BigQuery Data to Google Sheets
Import Dr Chrono Data to Google Sheets
Import Google Merchant Center Data to Google Sheets
Import Help Scout Data to Google Sheets
Import RD Station Data to Google Sheets
Import Salesforce Data into Google Sheets
Import Snapchat Ad Data to Google Sheets
Import Twitch Data to Google Sheets
Import Yahoo Fantasy Sports Data to Google Sheets
Import Zoho Data to Google Sheets (Any Application)
Client Credentials Flow Examples

Import Criteo Data to Google Sheets
Import FedEx Data to Google Sheets
Import PayPal Data to Google Sheets
Import Taboola Data to Google Sheets
How to Activate the Connection
The Authorization Code grant type involves logging into a server as described below. (For the Client Credentials flow, simply click Save and select the connector for your request as shown in step 4, as there's no need to log in.)

First, click Connect to authenticate yourself through your new connection.
customoauth-connect
Assuming everything was set up correctly, you'll be taken to the target site and prompted to connect your account.
custom-oauth2-img4
Once you accept, you’ll see your new connection reflected in both the Connections list and under the OAuth dropdown menu.
customoauth-connected
Now you can enter your request details and choose your custom connector to run your request.
bigquery-img21
Usage Notes
Custom OAuth2 connections are only saved to the sheet in which they're created. Unlike preset connections, they won't be available in other sheets.
Some APIs provide multiple methods of connecting, e.g. either an API key or OAuth 2.0. If you're using the OAuth 2.0 method, just skip their instructions for adding an API key. You don't need to enter any authentication-related headers if you're using OAuth 2.0.
If your OAuth 2.0 connection hasn't been set up, or you no longer have access, you will receive the following error message: "Request failed: Access not granted or expired." In that case, go back to the Connections screen and click Connect again.
Appendix: Manually Retrieve Client Credentials Token
While Uniquery API Connector's OAuth Manager can retrieve and refresh access tokens using the Client Credentials flow, there may be times you'd like to fetch the tokens yourself, without using the OAuth Manager. In those cases, open Google Sheets, click Extensions > Uniquery API Connector > Open > Create request, and set up a request as follows:

Application: Custom
Method: POST
Request URL: your_token_url
Request body: {"grant_type":"client_credentials", "client_id":"your_client_id", "client_secret":"your_client_secret"}
Substitute in your API's token URL, and your client ID and secret. Name your request and click Run. The whole thing should look like this:
taboola-token

Some APIs require that you encode the client ID and secret to base 64 and pass them in a Header rather than pass them directly in the request body. In those cases, the token URL will remain the same, the Header will have a key of Authorization, value of Basic your_encoded_credentials, and the request body will be {"grant_type":"client_credentials"}
Once you pass your client ID and secret, an access token will be returned in the access_token field. To fetch data, create a new request including a Header with a Key of Authorization, value of Bearer your_access_token. Access tokens typically have a short-lived lifespan, so you'll likely need to refresh the token each time you make a request.

Next 
Flatten Fields to Columns
52 thoughts on “Create a Custom OAuth Connection”
David
December 17, 2020 at 12:03 pm
Hi Ana

Is there a way to get access to the Google Ads API via OAuth2?

Reply
Ana
December 17, 2020 at 2:33 pm
Hey David, I think you could do this by following Google's documentation on how to get your OAuth2 details and connect to the API. I'll probably go through this process myself and add it as a default connection.

Reply
Ana
June 15, 2021 at 7:53 am
Update: added this as a preset OAuth connection, please check this article: Import Google Ads Data to Google Sheets

Paul
February 4, 2021 at 4:51 pm
Is there a way to do OAuth token (not Oauth2) connections ? e.g.

https://api.virtuoussoftware.com/home/auth

?

I'm probably missing something obvious in your docs. Thanks

Reply
Ana
February 5, 2021 at 6:59 am
Sure, Uniquery API Connector works with any kind of token. They provide a cURL expression to get your token: curl -d "grant_type=password&username=YOUR_EMAIL&password=YOUR_PASSWORD" -X POST https://api.virtuoussoftware.com/Token
So I think the easiest is to just substitute in your email and password, and then just copy and paste the whole expression into the cURL importer (Add-ons > Uniquery API Connector > Import/Export > Import cURL). This will parse the expression and automatically configure it for Uniquery API Connector so you can just hit Run to get your token.
Then, follow the docs and use your token in the header like this: Key = Authorization, Value = Bearer your token. You can reference that token in its cell so you don't need to keep typing it in whenever the token updates. Hope that clarifies.

Reply
Paul
February 9, 2021 at 6:48 pm
Hi -

Is there a way to set the access and refresh token? The OAuth2 service I want to connect to doesn't use the normal OAuth2 "connect" workflow for some reason. They just give the client id, secret, access, refresh token, and token url.

Thanks!

Reply
Ana
February 10, 2021 at 1:20 am
Sure, it's totally fine to manually handle OAuth2 (or the various requests within the flow). In that case, instead of using Uniquery API Connector's built-in OAuth2 connection manager, you'd set up a series of "regular" API requests and go through the OAuth2 flow manually.

Reply
caelan
July 7, 2022 at 3:56 pm
How would this be done?

Ana
July 7, 2022 at 4:23 pm
Generally it would be like this:
Method: POST
URL: https://api.com/v1/oauth2/token
Request Body: {"client_id":"your client ID","client_secret":"your client secret","grant_type":"client_credentials"}

That should return a token, which you'd then enter into the Headers section in a second request (where Key = Authorization, Value = Bearer your_token). The specifics may be different depending on your API, so you can check the API's documentation for details, or feel free to share the name of the API if you'd like me to take a look.
Update: Uniquery API Connector now has built-in support for the client credentials flow, so you can run and refresh your token in a single request.

Sven H.
February 22, 2021 at 11:23 am
Hi. Is it possible to create a simple connector for google sheets with the Scope user.email ?

I have a sheet with multiple editors added and i will welcome the editor with his google-email.
cell A1 is "Welcome" and cell A2 is "=ACTIVEUSER()".
This function calls activeUser = Session.getActiveUser().getEmail();
But there is a authorisation required and i have problems to handle this.

Thank you 🙂

Reply
Ana
February 22, 2021 at 11:42 am
Hey Sven, sorry, I don't know any way to pass in a dynamic value for the scope. Generally you don't need to pass in the value for the 'email' scope yourself anyway, it's just used to make the platform pop up a login modal so the user can log in with their own email address. So users click Connect, then they see the popup and authorize the connection with their own account. That means multiple users can connect through a single OAuth2 connection, but they each need to authorize themselves individually.Hope that helps clarify, if not, let me know and I'll try to explain further.

Reply
Jab
May 9, 2021 at 7:39 pm
Hello! I have this client and they are using RetailExpress POS and this is the API documentation: https://developer.retailexpress.com.au/

It seems that it requires OAuth 2.0

Can you add this? Or help/guide me to do it?

Thaaaank you so much. I’m a very big fan of this tool will be using these to all of my clients in the future

Reply
Ana
May 10, 2021 at 3:33 am
Hi Jab! Thank you for the message. Unfortunately it looks like they're using a non-standard mix of APIs keys + OAuth2, so it won't directly work with Uniquery API Connector's OAuth2 manager (they require you pass an API key in the header to get your OAuth2 token). Therefore you will need to step through their process semi-manually, like this:
1) register an application on their site to get an API key
2) run a request to https://api.retailexpress.com.au/v2/auth/token. Under Headers, include Key = x-api-key, Value = your-API-key (substitute in your API key here). This request will return your token.
3) To make new requests, keep that x-api-key header and add a new one of Key = Authorization, Value = Bearer your-token (substitute in your token here)
4) Since the bearer token will continuously expire, you will always need to run that first request before you make a new request. You can set your headers to reference the updated token in your sheet, so you don't need to manually update your request.
It's a little inconvenient compared to the normal process, but should work. Let me know if you get stuck or need further clarification.

Reply
Khushal
June 5, 2021 at 2:17 pm
'Request failed: Access not granted or expired. Please reconnect.'
i got this message for Zoho Analytics after some time and my connection is expired, then i need to manually re-connect the connection,

so is there any way to avoid this manual process??

please help

Reply
Ana
June 5, 2021 at 2:26 pm
Can you try adding &access_type=offline to your authorization URL?

Reply
Michel
September 30, 2021 at 4:38 pm
Hi Ana,

I try to connect to an affiliate network. Therefore I used your explanation in your comment to Jab by using the credentials in the 'key' and ' value' fields in the header. That worked. But now I need to make a new request which is getting access to the affiliate programs based on a keyword. How to make a new request that follow up the first one (authorization)? This is the link of the affiliate program.

https://wiki.awin.com/index.php/API_get_programmes

Reply
Ana
September 30, 2021 at 4:54 pm
Hey Michel, I checked their docs and it’s not the full OAuth2 process, it’s much simpler so you don’t need any of the instructions on this page.

Under API Url Path, enter the API URL you’re interested in.

Then, under headers enter Key = Authorization, Value = Bearer your_token

Substitute in your token where it says your_token. You can get your token while logged in, they have some screenshots here: https://wiki.awin.com/index.php/API_authentication

Please check if that works for you.

Reply
Michel
October 8, 2021 at 3:23 pm
Thanks Ana, it works!

Reply
taylor
October 25, 2021 at 11:34 pm
Hello, I'm curious if you could assist on the Snapchat Story Studio Analytics API? I keep getting "missing scope" when I follow the steps for the Custom Uniquery API Connector. Thank you!

Reply
Ana
October 26, 2021 at 5:08 am
Sure, the scope should be snapchat-marketing-api. So the whole thing would be set up like this:
Name: any name, e.g. Custom Snapchat
Authorization Base URL: https://accounts.snapchat.com/login/oauth2/authorize
Token URL: https://accounts.snapchat.com/login/oauth2/access_token?scope=snapchat-marketing-api
Client ID & Secret: provided by Snapchat

Let me know if you run into any issues.

Reply
Guy Gordon
March 25, 2022 at 8:35 pm
I'm evaluating this add-on for use and am needing to do a custom OAuth2 connection (to GoToConnect / Jive). All I get when I try to connect is...

Access Error
An error has occurred: Error: Error retrieving token: access.denied, Invalid client secret.

I've even deleted and created a new app on their side to generate a new Client ID & Secret, but I get the same thing every time. I can make manual app script code via Google's apps-script-oauth2 library authenticate fine, but I just keep getting this error when I try to do it from Uniquery API Connector.

Reply
Ana
March 26, 2022 at 1:13 am
Hey Guy, I can't really say much without seeing your setup. Mind contacting support so I can help you troubleshoot this?

Reply
li
April 19, 2022 at 12:20 am
Hi Ana! I'm trying to connect with the Naver api login (https://developers.naver.com/products/login/api/api.md) but it seems something is missing as I got an error message as below. As you described I've input you callback url (https://script.google.com/macros/d/12COOkin8nodCH7fZGIBu0D2jWY8-AEA0uvElt4Ph4wRbLUD4wslqQUfG/usercallback) with the service URL of my client (e.g. https://www.apple.com). Is there any point that I need to revise? Please let me know 🙂

---------------------
The URL where you tried logging in to NAVER is not registered. you need to check due to error in the *** service. You can use NAVER Login only through the registered URL.

In case you need to use Log in with NAVER in a website that is not registered due to service characteristics (e.g. plugin services), please email us at dl_naverid@navercorp.com with the description of the service and of the action structures attached.

Reply
Ana
April 19, 2022 at 3:30 am
I believe the service URL should be https://googleusercontent.com, as that's the domain used by Sheets extensions. Please check if that resolves the issue.

Reply
Alex F
May 14, 2022 at 10:13 am
BigQuery API keeps expiring from time to time so my scheduled runs fail. Any thoughts on how to persist it?

Reply
Alex F
May 28, 2022 at 4:11 pm
Sorry for the delay in replying. I gow the following message:

Error 400: invalid_request
OAuth 2 parameters can only have a single value: access_type

Reply
Alex F
May 28, 2022 at 4:54 pm
I'm sorry, please disregard. I realized I had set up my user stype incorrectly, therefore it was getting expired every seven days.

Reply
Ana
May 29, 2022 at 4:54 am
Interesting, thank you for the follow up. I'm not totally sure where you set a user type, but I'm glad it's working now.

Chris Grant
June 13, 2022 at 1:43 pm
Hi, I'm trying to connect to Square payments from Google sheets and have the Client ID: and Client Secret: but can't work out how to obtain Authorization Base URL: and Token URL:

Reply
Ana
June 13, 2022 at 2:58 pm
Looks like they list those URLs here. Based on that, the Auth URL is https://connect.squareup.com/oauth2/authorize and the token URL is https://connect.squareup.com/oauth2/token, please try those and see how it goes.

Reply
Anderson
September 7, 2022 at 4:17 pm
Hi, i'm trying to connect to the sandbox api listed here
https://github.com/HelisLT/eneba-client/blob/470b212c83d75b1aee49b1fa50b1538206dd3aa3/docs/QUICKSTART.md

I already have my id and secret, what do i need to put on the BASE URL and TOKEN URL so i can get the token

Reply
Anderson
September 7, 2022 at 5:08 pm
I tried import the CURL for the token, and it doesn't work it gives 403 error. If i import it on postman i get the token.

Reply
Ana
September 7, 2022 at 6:57 pm
Normally if a request works in Postman it should work in Uniquery API Connector. Can you please double check that the setup is exactly the same? Or let me know your config details if you’d like me to take a look.

Selva T
September 30, 2022 at 6:58 am
Hello, I receive the below error while creating custom OAuth 2.0 for Mircosoft Dynamics 365 Business Central.
How to change the redirect URL.

AADSTS50011: The redirect URI 'https://script.google.com/macros/d/12COOkin8nodCH7fZGIBu0D2jWY8-AEA0uvElt4Ph4wRbLUD4wslqQUfG/usercallback' specified in the request does not match the redirect URIs configured for the application '439cfe63-7cd2-4032-a914-e236c24c8291'. Make sure the redirect URI sent in the request matches one added to your application in the Azure portal. Navigate to https://aka.ms/redirectUriMismatchError to learn more about how to fix this.

Reply
Ana
September 30, 2022 at 7:21 am
Hey Selva, the redirect URL is registered on Microsoft's side, not on our side, and it looks like the link in their error message explains how and where to set this.

Reply
Selva T
September 30, 2022 at 8:20 am
Hi Ana,

When I click on connect, this URL is loaded "https://script.google.com/macros/d/12COOkin8nodCH7fZGIBu0D2jWY8-AEA0uvElt4Ph4wRbLUD4wslqQUfG/usercallback". We have different redirect URL that I need to pass as a parameter. I can see exact same URL in your documentation.

Ana
September 30, 2022 at 10:13 am
Any requests running through the Uniquery API Connector extension need to use the Uniquery API Connector redirect URL; you can't use something else since then it wouldn't redirect to our extension after login. That redirect URL should be registered in the Microsoft portal so they can recognize and whitelist it.

Karlis
October 11, 2022 at 8:37 am
Hi. I have a trouble to create custom OAuth with Nexar.
Authorization Base URL: https://identity.nexar.com/connect/authorize
Token URL: https://identity.nexar.com/connect/token
and added redirect url to my nexar portal,
But when I try to connect, I get error with invalid request.

Reply
Ana
October 12, 2022 at 3:14 am
Hey Karlis, from what I can tell in their docs, they're using the client credentials flow. That means you don't need to use the OAuth manager, instead you should create a POST request to https://identity.nexar.com/connect/token, with a request body of {"client_id":"your_client_id","client_secret":"your_client_secret","grant_type":"client_credentials"}. Please check if that works for you.
Update: Uniquery API Connector's OAuth manager now supports the client credentials flow.

Reply
Lixx
November 4, 2022 at 6:04 am
Hi Ana, paid user here. Just wanted to know if this article could be used to pull snapchat marketing data? Because the Uniquery API Connector doesn't have the snapchat app in the dropdown button available.

Reply
Ana
November 4, 2022 at 7:16 am
I haven't used Snapchat's API myself, but it looks like you would start off by making an application from your Ads Manager. That will give you the client ID and secret, and then the auth URL is https://accounts.snapchat.com/login/oauth2/authorize?scope=snapchat-marketing-api and the token URL is https://accounts.snapchat.com/login/oauth2/access_token. With those values you should be able to create your own custom OAuth connection and retrieve data from their API.

Reply
Lixx
November 8, 2022 at 5:45 am
Thank you Ana. As I was following your tutorials from FB and Google and they're all working fine, do you think you can make a guide for snapchat too? I just need to pull campaign data from snapchat to google sheet. Thanks in advance.

Ana
November 8, 2022 at 11:46 am
Sure, I made you a tutorial here, please check: https://Uniquery.io/knowledge-base/import-snapchat-ad-data-to-google-sheets/

Dawid
February 7, 2023 at 2:31 pm
Hi Ana, do you think users without subscription/paid will be able to use this? I have been trying to create a custom oauth, but i got error. So i was thinking if this is locked for Free users.

Reply
Ana
February 8, 2023 at 2:40 am
Sorry, OAuth connections are currently only available on the Business plan, so you will get an error message on the free plan.

Reply
Yoshi
April 4, 2023 at 3:51 am
Hi!
I'm trying to connect to Spread Sheets form GA4(Google Analytics4).
I wanted to know if this article could be used to pull GA4 data?
Thanks.

Reply
Ana
April 4, 2023 at 5:17 am
Yes, it is technically possible to create your own custom OAuth connection to Google Analytics, using a similar process to the example given for BigQuery. However there’s really no need to do so as Uniquery API Connector has a preconfigured connection for GA4. Please see this article for info on connecting to GA4, or just let me know what you’re looking for.

Reply
Sushant sahil raina
September 8, 2023 at 6:33 am
how can i create a flow of data from google sheet to business central? if there is something that i can get help from, i shall be thankful !

Reply
Ana
September 8, 2023 at 8:14 am
Sorry, I'm not familiar with this API and from what I can tell it's pretty complex (like most of Microsoft's APIs). So I think you'll be better off with an application that contains a preset integration for Business Central, but if you want to try, you could test the instructions here. That article walks through the process of connecting to Business Central using Postman, and generally any request you make in Postman can be copied and run in Uniquery API Connector.

Reply
Joe Juvland
October 24, 2023 at 3:22 am
I'm trying to connect the API for NinjaOne to Uniquery API Connector, but the Callback URI for Uniquery API Connector is just a few characters too long for the Callback URI input field used to create the client ID on NinjaOne's site. Is there any way to shorten that Callback URI?

Reply
Ana
October 24, 2023 at 3:24 am
Hi Joe, I responded to this question via email a couple days ago, please check your spambox if you didn't see it. But in any case, our redirect URL is set by Google Apps Script, which is the platform upon which Google Sheets extensions are created, so unfortunately we're unable to change it.

Reply
Joe
October 24, 2023 at 5:23 am
I apologize, just caught it, thank you.

Leave a Comment
Comment

Name
Name
Email
Email
Jump To
Contents
Before You Begin
What is OAuth 2.0?
Why Create a Custom OAuth Connection?
How to Add a Custom OAuth Connection
Step 1: Configure an App
Step 2: Prepare Uniquery API Connector
Step 3: Complete OAuth Form
Custom OAuth Example
How to Activate the Connection
Usage Notes
Appendix: Manually Retrieve Client Credentials Token
Support
Knowledge Base
Support Forum
Contact
Company
About
Terms and Privacy
Affiliates
Social
LinkedIn
YouTube
Blog
Tools
Basic Auth Generator
JMESPath Expression Tester
FB Insights API URL Builder
Copyright © 2024 Uniquery, LLC | All Rights Reserved | 651 N Broad St, Suite 206, Middletown, DE 19709, USA

Skip to content
Uniquery
Uniquery

Uniquery API Connector
Integrations
Pricing
Knowledge Base
Support
Search the documentation...

Search
Get Started
Create a Request
Edit Fields
Print Request Metadata
Print Timestamp
Scheduling
Set Data Destination
Set Output Mode
Set Output Options
Set Report Style
Custom Requests
Connect to an OAuth API
Create a Custom Request
Include Headers
Include Request Bodies
Set Request Method
Use Cell Values in Requests
Advanced Features
Create a Custom OAuth Connection
Flatten Fields to Columns
ImportAPI Custom Function
JMESPath Filtering
Multi-Query Requests
Pagination Handling
View Raw API Response
Manage Requests
Duplicate Requests
Export API Requests
Import API Requests
Import Curl Requests
Request Logging
Help
Account Management
Error Messages
Frequently Asked Questions
Troubleshooting
Troubleshooting Triggers
Step-by-Step API Guides
Import 3Commas Data to Google Sheets
Import Abstract API Data to Google Sheets
Import AccuWeather Data to Google Sheets
Import ActiveCampaign Data to Google Sheets
Import AdRoll Data to Google Sheets
Import AfterShip Data to Google Sheets
Import Ahrefs Data to Google Sheets
Import Airtable Data to Google Sheets
Import Alpha Vantage Data to Google Sheets
Import API-Football Data to Google Sheets (RapidAPI)
Import AppsFlyer Data to Google Sheets
Import Asana Data to Google Sheets
Import BambooHR Data to Google Sheets
Import Basecamp Data to Google Sheets
Import BaseLinker Data to Google Sheets
Show all articles ( 158 )
Projects
Construct a CRM Dashboard in Google Sheets
Convert Latitude-Longitude Data to Addresses in Google Sheets
Facebook Marketing API Request URL Builder
Free Crypto APIs for Google Sheets
Get Product Cost From Shopify API in Google Sheets
Introduction to APIs
What is a GET Request?
What is a POST Request?
What is an API Header?
What is an API Request Body?
What is an API Request Method?
What is an API URL?
What is an API?
What is API Authentication?
Print
Scheduling
Last Updated On
August 7, 2023
by
Ana
< Knowledge Base
PREMIUM
Automated scheduling for the Uniquery API Connector add-on for Google Sheets allows you to refresh your reports automatically at defined intervals.

Contents
Create a Trigger
Trigger Settings
Available Refresh Frequency
Trigger Execution Time
Trigger Ordering
Trigger Timezones
Troubleshooting
Create a Trigger
To create an automatic trigger, click the Schedule tab in the top navigation menu in the Uniquery API Connector sidebar and click Create trigger. Optionally, tick the box to create a log of all requests run in your sheet.

triggers-add new
Trigger Settings
When you add a new trigger there are several available options.

triggers-settings
Active/Paused. Paused triggers will not run until their status is switched to active.
API Request name. Here you can choose specific API request names from the drop-down menu, so different requests can have different triggers. Alternately, you can choose the 'All' option to select all of them at once, but be mindful of Google's limits.
Run request. Once you've chosen which request(s) you'd like to schedule, choose your desired refresh frequency.
Run as. By default, this will be set to "Any user", in which case triggers may run as any user who:

has Edit access to the sheet,
has an Uniquery API Connector account that enables scheduling, and
has opened the sidebar in the sheet at least once

In some cases, you may wish to assign scheduled requests to a specific user, for example if only that user has authenticated an OAuth connection, or you want to split up requests between users to avoid hitting Google's limits. The Run as list will show all users who have Edit access to the sheet.

Trigger name. Give your trigger a name.
Available Refresh Frequency
Currently reports can be updated at the following intervals:

hourly, including every 1, 3, 6, and 12 hours (Business / Team plans only)
daily
weekly
monthly
The exact execution time is set by Google, see here for more info.

Trigger Execution Time
Triggers are set within Uniquery API Connector and then managed by Google, which will execute your requests on a recurring interval.

Google slightly randomizes the time. For example, if you set a daily trigger between 2am - 3am, Google will choose a time between 2am and 3am for your trigger. Following that, your trigger time will remain consistent each day, such that exactly 24 hours passes before the trigger fires again.


If you'd like to know the exact time your triggers execute, toggle on logging or add a timestamp to your request (located under Output Options).

Trigger Ordering
In some cases you may want one request to run before a second request, to ensure that some ID or other value is ready for a subsequent request. This can be done by ordering triggers. There are two methods of ordering triggers:

Individual request triggers will run in the order they're set on the Trigger screen. The trigger listed at the top will run first, the trigger underneath that will run second, and so on, all the way to the bottom.
An "All" trigger only has one trigger listed on the Trigger screen, as that trigger applies to all the requests in the sheet. In that case, the "All" triggers will run in the order of requests listed on the Requests screen. As above, requests will run from top to bottom.
Trigger Frequencies
If two triggers are set to run at the same frequency, the one higher up will always run prior to the other.

If triggers are set to run at different frequencies (e.g. one hourly, one daily), they continue to run only at their assigned frequency, but the one higher up takes precedence over the other one during the interval that they overlap.

Example
In the screenshot below, Hourly runs every hour and Daily runs just once a day. Daily will always run first during the hour that they both run.

scheduling-img5
Re-order Triggers
On both the Requests screen and the Saved Triggers screen, triggers can be re-ordered by grabbing their handles and dragging and dropping them to the desired order.

Trigger Timezones
All triggers will use the spreadsheet timezone, which you can view by clicking File > Spreadsheet Settings. For more information on changing your sheet timezone, check https://support.google.com/docs/answer/58515.

Please note that if you change your spreadsheet timezone, you will need to delete and re-add your triggers to run off the updated timezone.

Troubleshooting
See here for information on troubleshooting triggers: Troubleshooting Triggers

 Previous
Print Timestamp
Next 
Set Data Destination
25 thoughts on “Scheduling”
mathias neale
September 5, 2019 at 1:45 pm
Is it possible to run this every minute or so?

Reply
Ana
September 5, 2019 at 1:50 pm
Hi Mathias, the hourly update limit is because Google doesn't let add-ons use triggers more than once an hour (documentation). If that ever changes, I'll add in triggers for more frequent updates.

Reply
Denis
July 14, 2020 at 4:09 am
I will post my question here also.

Is it possible to control the time of the schedule the triggers at a specific time within the hour or is it determined by Google?

Reply
Ana
July 14, 2020 at 4:10 am
It's determined by Google. They slightly randomize the time within the hour, so there is no way to force it to update at a specific time other than trial and error. If you haven't already, you can add a timestamp to your request (located under Output Options) so that you know exactly when it executes. Once it runs the first time, Google will keep that time consistent day to day.

Reply
Jaco
September 26, 2020 at 1:55 pm
Hi Ana

While an API call every hour is fine for me, the problem is that the API may not be called on the exact precise time every hour.
Is it possible to manually add the script in Google Sheets, and if so, how would one go about it?
https://developers.google.com/apps-script/guides/triggers/installable#managing_triggers_programmatically

Reply
Ana
September 27, 2020 at 3:31 am
Hi Jaco, there's no way to manually hook into Uniquery API Connector code since the extension runs in its own sandbox. Even if you could, I'm not sure how manually adding the script in Google Sheets would help with running at the exact precise time every hour, since scheduling limits and execution times are set by Google, not Uniquery API Connector. We already use Google's programmatic triggers in the code.
Please let me know if that answers your question, if not, I'll be happy to explain further.

Reply
Fred
November 3, 2020 at 3:36 am
Would it be possible to set the output mode via the trigger creation/edit page?

Right now I have to create multiple requests and then put them in the order they need to run in. If the I could set up one trigger to run a request in Overwrite and then, another to run it in Append I could do the same thing but with triggers instead of Requests. This would be a lot easier for me to manage since it's just a run parameter that's changing.

Reply
Ana
November 3, 2020 at 9:36 am
Hey Fred, you are suggesting that the output mode gets set on the trigger screen rather than on the create report screen, right? That might be convenient in this specific case, but I would be concerned about splitting up where options get set, especially as a lot of people choose overwrite vs append mode without using scheduling at all. Also, it doesn't seem too time consuming to create a new version of a request with a different output mode, but maybe I'm missing something about your workflow.

Let me know what you think.

Reply
Oguz
March 17, 2021 at 5:52 am
First of all, thank you very much for creating this plugin.

I use it to pull data from XML as a paid user. Everything works perfectly when I manually trigger it.

However, when I use hourly schedule triggers, I constantly have problems. I can't clearly tell when it is working or not. That's why I often have to trigger manually.

I guess you are sending these schedule triggers into a queue system, and it performs these operations in turn. In busy times, it doesn't come to us.

How can we overcome this problem?

Reply
Ana
March 17, 2021 at 7:02 am
Hi Oguz, I think we already communicated about this via email but I'll respond here as well. Thank you for the message and sorry you're having trouble with your requests. Triggers are managed by Google, and the most likely cause of scheduling issues is that you're running into Google's 6 mins/execution scheduling limit. This article contains several suggestions for avoiding Google's limitations.

Reply
Ana
March 25, 2021 at 3:36 am
Update: there’s now a request logging feature which should also help identify when requests fail.

Reply
Harris
August 19, 2021 at 4:35 pm
Hello. I'm a paying Uniquery customer. I understand that Google scheduling cannot allow a user to specify when within an hour a job gets called (this is not a limitation of Uniquery). I'm trying to get my task to run exactly on the hour (8:00:00, 9:00:00, etc.) 24 times a day, 365 days a year by setting up a macro in google sheets, and then scheduling the macro to run at exact times.

My questions are - have you seen a way to schedule macros for an exact time? Can I call Uniquery from within a google sheet macro? Is this a workaround to this problem or am I wasting my time?

Reply
Ana
August 20, 2021 at 12:29 am
Sorry, I don't know how to call our add-on from a macro, since Google only lets us access add-on functions through the menu, sidebar, custom functions, etc (the elements of the add-on itself). I tested creating a macro and it didn't recognize any of my actions in the add-on.
For something like this it might be better to create your own custom script (or have a developer write one) as Google's time restrictions don't apply to those.

Reply
John
October 30, 2021 at 4:47 pm
Anna,
Have you implemented exponential backoff in response to errors? If not, have you considered it?
https://developers.google.com/admin-sdk/directory/v1/limits

I've setup my url YT API calls to not go over quota, but am still getting 403 errors in AC_log. YT developer console shows no indication of going over limits.

Reply
Ana
October 31, 2021 at 1:50 am
Hey John, sorry, no we haven't. I think the problem is that there are many potential errors that wouldn't be resolved by trying again (like authorization errors), and could even make it worse (like if the quota needs to reset). Scheduling only sends requests 1x max per hour, and we automatically insert 2 second delays between multi-query requests, so rate limits usually aren't a problem. If by "YT" you meant YouTube, Uniquery API Connector has a quota from YouTube that gets shared between all our users, so one possibility is that you hit our limit. We can contact Google to ask for a quota increase, and/or you can get your own API key so you pull from your own personal quota. Update: we received a quota increase from YouTube.

Reply
Rosina Su
March 14, 2022 at 10:03 pm
HI,
Somehow the scheduling can only update the status daily/ weekly/ monthly. The option of "hourly" does not show up in the option. Is that true?

Reply
Ana
March 15, 2022 at 12:02 am
Hourly scheduling is a Business plan feature, so if you don't see it, you're most likely not on that plan. To check your plan, please click the Account link in the main menu or footer of Uniquery API Connector, or just send us a message via support.

Reply
Bram
May 24, 2022 at 9:48 am
As a paying Uniquery customer, we can schedule triggers. Over the years this has grown, some are no longer needed. How can we get a detailed overview of all the triggers? Via https://script.google.com/home/triggers I get to see 30+ daily requests but there is not much (no) detail in them, it would be nice to see through which Spreadsheet the trigger is running.

Reply
Ana
May 24, 2022 at 11:02 am
You could navigate to Google Drive > Recent to see any sheets that have recently updated, but for a more comprehensive list please message support. We can query the backend server logs to get you a list of where your triggers are running. I'll also add more accessible trigger metadata to our list for future development.
Update: You can now see all active sheets through the Account screen.

Reply
Katran
May 31, 2022 at 5:57 am
How do I create a button - "Refresh data"? Which will run all requests.

Reply
Ana
May 31, 2022 at 7:15 am
You can't create a button but you can do one of the following:
1) Click Extensions > Uniquery API Connector > Refresh All Now
2) Use the IMPORTAPI custom function (see the section on fast cell-based refresh for info on refreshing requests via a checkbox)

Reply
Log
August 19, 2023 at 12:55 pm
Hi,
quite disapointed with the scheduling feature that is no longer included in the free version. can't use the api anymore

Reply
Ana
August 19, 2023 at 1:17 pm
Sorry you're disappointed, but scheduling has been a paid feature since the day this extension was released 4+ years ago. If you had access before and don't anymore, you were likely in your free trial that temporarily activates all paid features.

Reply
molly
October 24, 2023 at 12:10 pm
Hi,
If I have date parameters in my API link, is there a way of these to update automatically rather than staying static? I would like to run the report once a day for month to date without having to manually change the dates every time.
Thanks
Molly

Reply
Ana
October 24, 2023 at 1:35 pm
Sure, you can create dynamic dates in your sheet (e.g. =today()-1 for yesterday) and then reference those cells in your request. Please see here for more info: Use Cell Values in Requests

Reply
Leave a Comment
Comment

Name
Name
Email
Email
Jump To
Contents
Create a Trigger
Trigger Settings
Available Refresh Frequency
Trigger Execution Time
Trigger Ordering
Trigger Frequencies
Example
Re-order Triggers
Trigger Timezones
Troubleshooting
Support
Knowledge Base
Support Forum
Contact
Company
About
Terms and Privacy
Affiliates
Social
LinkedIn
YouTube
Blog
Tools
Basic Auth Generator
JMESPath Expression Tester
FB Insights API URL Builder
Copyright © 2024 Uniquery, LLC | All Rights Reserved | 651 N Broad St, Suite 206, Middletown, DE 19709, USA

Skip to content
Uniquery
Uniquery

Uniquery API Connector
Integrations
Pricing
Knowledge Base
Support
Search the documentation...

Search
Get Started
Create a Request
Edit Fields
Print Request Metadata
Print Timestamp
Scheduling
Set Data Destination
Set Output Mode
Set Output Options
Set Report Style
Custom Requests
Connect to an OAuth API
Create a Custom Request
Include Headers
Include Request Bodies
Set Request Method
Use Cell Values in Requests
Advanced Features
Create a Custom OAuth Connection
Flatten Fields to Columns
ImportAPI Custom Function
JMESPath Filtering
Multi-Query Requests
Pagination Handling
View Raw API Response
Manage Requests
Duplicate Requests
Export API Requests
Import API Requests
Import Curl Requests
Request Logging
Help
Account Management
Error Messages
Frequently Asked Questions
Troubleshooting
Troubleshooting Triggers
Step-by-Step API Guides
Import 3Commas Data to Google Sheets
Import Abstract API Data to Google Sheets
Import AccuWeather Data to Google Sheets
Import ActiveCampaign Data to Google Sheets
Import AdRoll Data to Google Sheets
Import AfterShip Data to Google Sheets
Import Ahrefs Data to Google Sheets
Import Airtable Data to Google Sheets
Import Alpha Vantage Data to Google Sheets
Import API-Football Data to Google Sheets (RapidAPI)
Import AppsFlyer Data to Google Sheets
Import Asana Data to Google Sheets
Import BambooHR Data to Google Sheets
Import Basecamp Data to Google Sheets
Import BaseLinker Data to Google Sheets
Show all articles ( 158 )
Projects
Construct a CRM Dashboard in Google Sheets
Convert Latitude-Longitude Data to Addresses in Google Sheets
Facebook Marketing API Request URL Builder
Free Crypto APIs for Google Sheets
Get Product Cost From Shopify API in Google Sheets
Introduction to APIs
What is a GET Request?
What is a POST Request?
What is an API Header?
What is an API Request Body?
What is an API Request Method?
What is an API URL?
What is an API?
What is API Authentication?
Print
Include Headers
Last Updated On
December 31, 2022
by
Ana
< Knowledge Base
See below for details on including headers for API Requests using the Uniquery API Connector add-on for Google Sheets.

Contents
What are API Headers?
Add a Header
Add Multiple Headers
Delete Headers
Reference a Cell
What are API Headers?
Headers are key-value pairs that send extra information about your request to the API server. The server responds with headers as well; it's a two-way exchange. Headers typically aren't directly related to the content of the request, but instead provide metadata to describe the request and handle authorization.

There are many custom headers, but here are a few of the most common:

Accept. Tells the API server which format you expect to receive back, e.g. text/html, application/xml, application/json.
Authorization. Include authorization credentials like an API key or token.
Content-type. Describes the format of the current request or response.
Add a Header
Required headers and header values are generally available in the developer section of your platform. The exact values and syntax for the header depend on each API, so check your API's documentation to see the requirements.

To enter a header, enter the key-value pair into the Headers section of the Uniquery API Connector form.
headers-addheader

Add Multiple Headers
You may need to include multiple headers in your API request.

Simply add them, one under the other, in the Headers section of Uniquery API Connector's Create Request screen:
headers-multipleheaders

Delete Headers
If you need to delete a header, you may do so by clicking the red "x" icon that appears on hover.
headers-deleteheaders

Reference a Cell
As an alternative to typing in your headers directly, you can input them into a sheet cell instead, and then reference the cell, e.g. +++Inputs!A1+++ (info).

 Previous
Create a Custom Request
Next 
Include Request Bodies
13 thoughts on “Include Headers”
Jay
January 21, 2021 at 3:45 am
The API i'm calling requires that an "Authorization" header is added with "Bearer " + access_token, however I don't know how to reference the token provided by the Custom OAuth2 functionality. Is there a way to access the token dynamically?

Reply
Ana
January 21, 2021 at 4:38 am
Hey Jay! Sure, you can reference the cell containing the token using +++ syntax (info). You can also schedule your requests to run in sequence to make sure that the access token is returned before your second request needs it. However this sounds like you're setting up OAuth2, in which case the custom OAuth2 feature probably makes more sense since it will refresh the access token for you.

Reply
Anonymous
January 5, 2022 at 7:11 pm
When I use the +++ syntax, it only makes the request for the first header (ie the first bearer token/user account)

I am trying to aggregate a few user accounts. Each user account has a unique Bearer Token. What should my header section look like to make the same endpoint request but swapping out the Bearer Token each time so that I am getting the results for each user? It

Reply
Ana
January 6, 2022 at 4:52 am
Sorry, you can only cycle through multiple URLs or multiple request bodies, not multiple headers. You would need to create separate requests for these.

ford
July 26, 2021 at 1:42 pm
how to display the result off the api in a specific cell D29?

Reply
Ana
July 26, 2021 at 2:20 pm
You can have the raw API data dump to a source sheet, then pull the data you want into cell D29 in a second summary sheet. Sheets provides a lot of functions for this (VLOOKUP is probably the most popular).

Another option would be our IMPORTAPI custom function, which lets you run API queries from any cell.

Reply
Ana
September 26, 2021 at 1:40 am
You can now also set a starting cell for the response.

Mohammad Sammak
August 20, 2022 at 9:22 pm
Hi
Is it possible to use gsheets cells as values in the parameters of the api uri which is being called?

Reply
Ana
August 20, 2022 at 10:01 pm
Sure, please see this article: https://Uniquery.io/knowledge-base/api-connector-create-api-request-based-on-cell/

Reply
Leo
September 15, 2022 at 3:54 pm
Is there a way to pass a custom User Agent in the Header?
I tried with User-Agent but it doesn't work

Reply
Ana
September 15, 2022 at 11:37 pm
Unfortunately Google doesn't enable custom user agents, you can register your support for this feature by starring this issue: https://issuetracker.google.com/issues/36758197

Reply
Paha
December 17, 2022 at 3:18 pm
Hello.
I'm trying to get api data from my account in the game. Gives an error after launch:
"1) hz: Completed with errors
- We received an error from ******.io (403) show response
{"message":"no token provided"}"

I have a key and an id token. where to insert them?

Reply
Ana
December 18, 2022 at 10:54 am
Hey Paha, every API has their own authentication requirements so you'd need to check their documentation to know where to put the key and token. Most APIs request that keys are inserted into a request header, but it could be in the request URL or request body. There are other variations, too, e.g. the header key could be Authorization or API-Key or something totally different. This article contains more information on authentication for APIs.

Reply
Leave a Comment
Comment

Name
Name
Email
Email
Jump To
Contents
What are API Headers?
Add a Header
Add Multiple Headers
Delete Headers
Reference a Cell
Support
Knowledge Base
Support Forum
Contact
Company
About
Terms and Privacy
Affiliates
Social
LinkedIn
YouTube
Blog
Tools
Basic Auth Generator
JMESPath Expression Tester
FB Insights API URL Builder
Copyright © 2024 Uniquery, LLC | All Rights Reserved | 651 N Broad St, Suite 206, Middletown, DE 19709, USA

Skip to content
Uniquery
Uniquery

Uniquery API Connector
Integrations
Pricing
Knowledge Base
Support
Search the documentation...

Search
Get Started
Create a Request
Edit Fields
Print Request Metadata
Print Timestamp
Scheduling
Set Data Destination
Set Output Mode
Set Output Options
Set Report Style
Custom Requests
Connect to an OAuth API
Create a Custom Request
Include Headers
Include Request Bodies
Set Request Method
Use Cell Values in Requests
Advanced Features
Create a Custom OAuth Connection
Flatten Fields to Columns
ImportAPI Custom Function
JMESPath Filtering
Multi-Query Requests
Pagination Handling
View Raw API Response
Manage Requests
Duplicate Requests
Export API Requests
Import API Requests
Import Curl Requests
Request Logging
Help
Account Management
Error Messages
Frequently Asked Questions
Troubleshooting
Troubleshooting Triggers
Step-by-Step API Guides
Import 3Commas Data to Google Sheets
Import Abstract API Data to Google Sheets
Import AccuWeather Data to Google Sheets
Import ActiveCampaign Data to Google Sheets
Import AdRoll Data to Google Sheets
Import AfterShip Data to Google Sheets
Import Ahrefs Data to Google Sheets
Import Airtable Data to Google Sheets
Import Alpha Vantage Data to Google Sheets
Import API-Football Data to Google Sheets (RapidAPI)
Import AppsFlyer Data to Google Sheets
Import Asana Data to Google Sheets
Import BambooHR Data to Google Sheets
Import Basecamp Data to Google Sheets
Import BaseLinker Data to Google Sheets
Show all articles ( 158 )
Projects
Construct a CRM Dashboard in Google Sheets
Convert Latitude-Longitude Data to Addresses in Google Sheets
Facebook Marketing API Request URL Builder
Free Crypto APIs for Google Sheets
Get Product Cost From Shopify API in Google Sheets
Introduction to APIs
What is a GET Request?
What is a POST Request?
What is an API Header?
What is an API Request Body?
What is an API Request Method?
What is an API URL?
What is an API?
What is API Authentication?
Print
Include Request Bodies
Last Updated On
October 8, 2023
by
Ana
< Knowledge Base
This article describes how to add a request body to a POST, PUT, or PATCH request using the Uniquery API Connector extension for Google Sheets.

For more general information about request bodies, please see this article: What is an API Request Body?

Contents
Before You Begin
Choose the POST, PUT, or PATCH method
Enter a Request Body
Request Body Formats
JSON
XML
urlencoded (x-www-form-urlencoded)
Set Content-Type headers
GraphQL Request Bodies
Troubleshooting
Before You Begin
Click here to install the Uniquery API Connector add-on from the Google Marketplace.

Choose the POST, PUT, or PATCH Method
Uniquery API Connector defaults to the GET method, which doesn't contain a request body. To make a POST, PUT, or PATCH request, choose that method from the drop-down menu:

requestbody-method
Enter a Request Body
As part of a POST, PUT, or PATCH request, a data payload can be sent to the server in the body of the request. When you select one of those methods from the method drop-down button, the Uniquery API Connector form changes to display an input field for the request body.

requestbody-body
Request body format
Uniquery API Connector supports three formats:

JSON
XML
url encoded (aka x-www-form-urlencoded).
The format can be selected via the drop-down format selector, where JSON and XML can be automatically detected via the "auto" option:
requestbody-formatdropdown

JSON
JSON should be entered as a standard JSON object, e.g.

{"id":123, "firstName":"John", "lastName":"Doe" }

XML
XML should be entered a standard XML object, e.g.

<employee id="123"> <field id="firstName">John</field> <field id="lastName">Doe</field> </employee>

URL encoded (x-www-form-urlencoded)
To submit url encoded data in Uniquery API Connector, enter key/value pairs as a JSON object. So again it will look like this:

{"id":123, "firstName":"John", "lastName":"Doe" }

Note that other API clients usually provide a key/value table to enter data that should be URL encoded. If you are copying request configurations over from a tool like Postman, you'll need to convert the table-formatted key/value pairs to JSON-formatted key/value pairs:


Set Content-Type Headers
A Content-Type header describes the object's format, so the server knows how to parse it. Selecting a request body format will automatically set Content-Type headers as follows:

json: application/json
xml: application/xml
url encoded: application/x-www-form-urlencoded
auto: JSON-formatted text will default to application/x-www-form-urlencoded, while XML-formatted text will default to application/xml
To override these content types, manually set a new content type in the Headers table, like this.
post-requests-img3

Only application/json, application/xml, application/x-www-form-urlencoded, and application/vnd.api+json content types are currently supported.

GraphQL Request Bodies
GraphQL request bodies should be entered as JSON. Use this handy converter tool to convert a GraphQL query to a JSON request body.

Troubleshooting
If your POST request isn't working, a likely cause is a mismatched content type. Try explicitly selecting the format from the dropdown format selector, or setting a content-type header.
If you need to send an empty request body, enter {}
url encoded request bodies should be entered as JSON.
 Previous
Include Headers
Next 
Set Request Method
19 thoughts on “Include Request Bodies”
Philipp
December 11, 2020 at 5:45 pm
Great tool! 🙂
I managed to connect to my service successfully.
1. I encoded the user ID and password in Bas64.
2. I called the API URL with Authorization Basic and added the bace64-Code.
3. I added {"grant_type":"client_credentials" ,} to the POST body.

I then get a token written in the sheet.

To extract data from the API I built another (GET) request:
I called the API URL with Authorization Bearer and added the token i got from the other request.

That also worked fine. But it is not very convenient to always run both requests and copy the restult of the first (the token) into the second.

How can I combine these two request to one?

I would appreciate your help very much! 🙂

Reply
Ana
December 12, 2020 at 12:33 am
Hi Philipp, it sounds like you're running an OAuth2 process manually, so I think the best solution is just to use Uniquery API Connector's OAuth2 manager (info). That way you won't need to encode to base64 and keep manually refreshing your token.

However if you'd like to continue with this method, I think you can semi-automate your process by referencing your token in its cell (info) instead of manually copying it in. That way you'd have, say, request #1 sending to a sheet called Token, then request #2 would include Authorization Bearer +++Token!A5+++. Then you just need to click Run twice in a row to retrieve and use the new token.

Just let me know if I can clarify further.

Reply
Jon
February 12, 2021 at 10:23 am
Hi - When is multiple POST bodies coming? Thanks, connector looks great.

Reply
Ana
February 13, 2021 at 8:39 am
This is now live : )

Reply
Rob
March 14, 2021 at 10:24 pm
Ana, I need some custom work for a few stores that is beyond my abilities. Do you do that or recommend someone with good knowledge of the Uniquery API Connector?

Reply
Ana
March 15, 2021 at 2:07 am
Hi Rob, thank you for the message. I don't know anyone offhand, but I've seen people post this type of request on upwork.com. You could also try on the Uniquery API Connector user forum: https://www.reddit.com/r/api_connector.
Of course if you just have questions about setting up your requests, I'll be happy to assist you myself.

Reply
Franco
August 19, 2021 at 10:35 am
Query: Request failed: Invalid POST body data

I copied and pasted your code in the Post body but returns always as error.

Reply
Ana
August 19, 2021 at 12:55 pm
If it says invalid POST body data that means it isn't valid JSON. Maybe you've inadvertently copied in some extra characters, or maybe I wrote it wrong to start with, I can't really say much without seeing it. Can you please paste your JSON here? I can check it out.

Reply
Cristian Quiles MArtorell
October 19, 2021 at 7:45 pm
When I enter this +++Sheet!K23+++ reference in the json body how can I make it a relative reference?

Reply
Ana
October 20, 2021 at 1:16 am
If you'd like to add multiple request bodies you need to add them one after the other with :::BREAK::: in between. So there's no way to do something like +++Sheet!K23:K25+++ in the request body, if that's what you mean.

Reply
José Luis Romero
February 17, 2022 at 4:55 pm
Regards,
I have this code in my request body:

{
"startdate": "2022-01-01",
"enddate": "2022-02-08",
"status": 1,
"rows": 500,
"page": 1,
"lasttransactionid": null
}

But it send me a mesage "Validation failed for parameter 'pStartDate'. Invalid date."

I tried to use different date formats, but I always get the same message

Reply
Ana
February 18, 2022 at 12:49 am
That's an error message from the API, not Uniquery API Connector, so I can't really say. Maybe they require a different date format? If you let me know which API it is, I can help you check their documentation to find out the problem.

Reply
Anonymous
August 11, 2022 at 8:59 am
you most select type of data send like text
{
"request_date_to": "2022-08-28",
"date_to": "2022-08-28"
}

Reply
Marianna
September 20, 2022 at 2:13 pm
This looks like a great tool! My use case is this: the users download the data using an API call to sheet, make changes to the values (so no new records added) on the sheet, and load it back.

How would I build the PATCH request for this case?

Reply
Ana
September 20, 2022 at 7:31 pm
Hi Marianna, there's no generic answer since it depends on the syntax required by the API, but generally you'd use cell references for this, e.g. {"name":"+++Sheet1!A1+++","address":"+++Sheet1!A2+++","date":"+++Sheet1!A3+++"}, such that the updated cells automatically populate your API request. Please feel free to link some documentation or contact support if you'd like more specific feedback based on the API's requirements.

Reply
Genek
November 4, 2022 at 11:04 am
Hi! Can we send a list of entries (rows) within a post/put body? The idea would be sending all the different rows on a sheet to a webhook.

So instead of sending something like this (one row):
{
"date":"+++Volume!A2+++",
"value":"+++Volume!B2+++"
}

I'd like to send all the rows in a dynamic way. How can I do it? Thanks a lot!

Reply
Ana
November 4, 2022 at 11:16 am
Sure, you can run through a list of multiple request bodies with the :::BREAK::: delimiter, e.g.
{"date":"+++Volume!A2+++","value":"+++Volume!B2+++"}
:::BREAK:::
{"date":"+++Volume!A3+++","value":"+++Volume!B3+++"}
:::BREAK:::
{"date":"+++Volume!A4+++","value":"+++Volume!B4+++"}

You can can semi-automate it by constructing that entire block in your sheet. Please see this article for more info and a sample sheet showing how that could work.

Reply
Sowmya
August 8, 2023 at 6:51 am
{"attachments":[{"attachmentDocumentURL":"redacted.pdf","attachmentDocumentPassword":"558I"},{"attachmentDocumentURL":"redacted","attachmentDocumentPassword":"558I"}],"messageTemplateId":"43CA1F69BE56530F","messageattributes":{"attribute":[{"name":"M1_NICKNAME","value":"redacted"},{"name":"M1_CONTACT_NO","value":"redacted"},{"name":"M1_DELIVERY_ADDRESS","value":"redacted"},{"name":"M1_DELIVERY_DATE","value":"02 August 2023"},{"name":"M1_ORDER_ID","value":"01356731"},{"name":"M1_DELIVERY_TIME","value":"10:00 - 12:00"},{"name":"M1_F1","value":"iPhone 14 "},{"name":"M1_F2","value":"redacted"},{"name":"M1_F3","value":"98460728"}]},"notificationDetails":{"serviceId":"98460728","notificationType":"In-Service","notificationCategory":"Others","initiatingSystem":"redacted","serviceExtId":"redacted","custExtId":"redacted","custAcctId":"redacted","ban":"redacted"},"to":"redacted","customerIdType":"NRIC"}

How to convert this in to simple request

Reply
Ana
August 8, 2023 at 7:42 am
Hey there, I replaced private-looking values with the word "redacted" and re-posted your comment. In any case, what do you mean by converting to a simple request? You can remove the comments (everything starting with "//") and paste the entire block into the request body input of any API client, does that answer your question?

Reply
Leave a Comment
Comment

Name
Name
Email
Email
Jump To
Contents
Before You Begin
Choose the POST, PUT, or PATCH Method
Enter a Request Body
Request body format
JSON
XML
URL encoded (x-www-form-urlencoded)
Set Content-Type Headers
GraphQL Request Bodies
Troubleshooting
Support
Knowledge Base
Support Forum
Contact
Company
About
Terms and Privacy
Affiliates
Social
LinkedIn
YouTube
Blog
Tools
Basic Auth Generator
JMESPath Expression Tester
FB Insights API URL Builder
Copyright © 2024 Uniquery, LLC | All Rights Reserved | 651 N Broad St, Suite 206, Middletown, DE 19709, USA

Skip to content
Uniquery
Uniquery

Uniquery API Connector
Integrations
Pricing
Knowledge Base
Support
Search the documentation...

Search
Get Started
Create a Request
Edit Fields
Print Request Metadata
Print Timestamp
Scheduling
Set Data Destination
Set Output Mode
Set Output Options
Set Report Style
Custom Requests
Connect to an OAuth API
Create a Custom Request
Include Headers
Include Request Bodies
Set Request Method
Use Cell Values in Requests
Advanced Features
Create a Custom OAuth Connection
Flatten Fields to Columns
ImportAPI Custom Function
JMESPath Filtering
Multi-Query Requests
Pagination Handling
View Raw API Response
Manage Requests
Duplicate Requests
Export API Requests
Import API Requests
Import Curl Requests
Request Logging
Help
Account Management
Error Messages
Frequently Asked Questions
Troubleshooting
Troubleshooting Triggers
Step-by-Step API Guides
Import 3Commas Data to Google Sheets
Import Abstract API Data to Google Sheets
Import AccuWeather Data to Google Sheets
Import ActiveCampaign Data to Google Sheets
Import AdRoll Data to Google Sheets
Import AfterShip Data to Google Sheets
Import Ahrefs Data to Google Sheets
Import Airtable Data to Google Sheets
Import Alpha Vantage Data to Google Sheets
Import API-Football Data to Google Sheets (RapidAPI)
Import AppsFlyer Data to Google Sheets
Import Asana Data to Google Sheets
Import BambooHR Data to Google Sheets
Import Basecamp Data to Google Sheets
Import BaseLinker Data to Google Sheets
Show all articles ( 158 )
Projects
Construct a CRM Dashboard in Google Sheets
Convert Latitude-Longitude Data to Addresses in Google Sheets
Facebook Marketing API Request URL Builder
Free Crypto APIs for Google Sheets
Get Product Cost From Shopify API in Google Sheets
Introduction to APIs
What is a GET Request?
What is a POST Request?
What is an API Header?
What is an API Request Body?
What is an API Request Method?
What is an API URL?
What is an API?
What is API Authentication?
Print
Import Ahrefs Data to Google Sheets
Last Updated On
January 3, 2024
by
Ana
< Knowledge Base
PREMIUM
In this guide, I'll get you started on pulling data from the awesome Ahrefs SEO tool suite into Google Sheets, using the Uniquery API Connector add-on for Sheets. Targeted around backlinks, you can use the Site Explorer, Content Explorer, Keywords Explorer, Rank Tracker, and Site Audit to compare your website to competitors. All in all, it's a pretty sweet tool and we can integrate its native API with Google Sheets!

Note: You need an account with Ahrefs to use this integration, and Ahrefs is not a free tool. However, through this integration, you can access their v2 API without paying any additional API fee.

Ahrefs also has a new v3 API, but unfortunately that one is only available for their Enterprise customers.

Contents
Before You Begin
Part 1: Connect to the Ahrefs API
Part 2: Pull Data from Ahrefs to Sheets
Part 3: Create a Custom API Request
Part 4: API Documentation
Appendix: Connect to the Ahrefs v3 API (Enterprise only)
Before You Begin
Click here to install the Uniquery API Connector add-on from the Google Marketplace.

Part 1: Connect to the Ahrefs API
The easiest way to get started with the Ahrefs API is through Uniquery API Connector’s built-in integration.

In Sheets, open Uniquery API Connector and create a new request (Extensions > Uniquery API Connector > Open > Create request)
Select Ahrefs from the drop-down list of applications
ahrefs-library-application
Under Authorization, click Connect to Ahrefs
ahrefs-library-authorization
You will see a modal asking you to approve the connection. Click Allow.
ahrefs-img2
You'll then be returned to your Google Sheet, and can verify that your Ahrefs connection is now active.
ahrefs-library-authorization-connected
Part 2: Pull Data from Ahrefs to Sheets
Now that we're connected, let's pull some data into Sheets.

There's only one endpoint for Ahrefs so skip straight to Request parameters. Choose the table from which you'd like to retrieve data. For this example, we'll choose backlinks.
ahrefs-library-parameters
Fill out the other required parameters (mode and target). For this example we'll set mode as domain and target as ahrefs.com, but you can use your own values.
ahrefs-library-parameters-2
Set a destination sheet, name your request, and click Run to see response data in your sheet.
ahrefs-library-response
Now select any other "from" table of interest and adjust parameters to get different data sets. You can pull in any of the data you see while logged into Ahrefs.
Part 3: Create a Custom API Request
Alternatively, you can run your own custom API requests instead of using Uniquery API Connector’s pre-built integration, using any of the URLs shown in the API documentation. To create a custom request, open Uniquery API Connector, add the complete URL into the request URL field and select Ahrefs from the OAuth menu. Here's an example request setup:

Application: Custom
Method: GET
Request URL: https://apiv2.ahrefs.com?target=Uniquery.io&limit=1000&output=json&from=backlinks&mode=domain&order_by=ahrefs_rank:desc
OAuth: Ahrefs
ahrefs-custom
Part 4: API Documentation
Official v2 API documentation: https://ahrefs.com/api/documentation

Official v3 API documentation: https://docs.ahrefs.com/docs/api

Appendix: Connect to the v3 API (Enterprise only)
Ahref's newest v3 API was released in September, 2022 and has a lot of really nice features. However, unlike their v2 API, it's only* available for users on Ahref's Enterprise plan. If that's you, here's how to connect and run a request.

*If you're not on the Enterprise plan, you can still test out the v3 API by running queries where the target is ahrefs.com. More info >
Log into Ahrefs and click Account Settings > API keys > Generate API key
ahrefs-generate
You'll see a key, copy it and keep it handy as we'll insert it into a request header (details shown in the next step).
Create an API request using any endpoint of interest from Ahref's v3 documentation. Open Uniquery API Connector, and enter that request like this:
Application: Custom
Method: GET
Request URL: https://api.ahrefs.com/v3/site-explorer/url-rating-history?date_from=2022-01-1&target=ahrefs.com
OAuth: none
Headers:
Authorization: Bearer 1234567 (insert your own API key where it says 1234567)
ahrefs-v3-example
Save and Run the request to see response data from Ahref's v3 API in your Sheet.
 Previous
Import AfterShip Data to Google Sheets
Next 
Import Airtable Data to Google Sheets
27 thoughts on “Import Ahrefs Data to Google Sheets”
Amine Dahimene
November 30, 2020 at 12:42 pm
Can we retrieve backlink for each cell instead of a one-off API request

Reply
Ana
November 30, 2020 at 12:44 pm
Hey Amine, the ImportAPI function lets you run API requests from cells, is that what you're looking for? If not please clarify and I'll be happy to answer further.

Reply
Kunal
October 28, 2021 at 6:54 pm
This is quite handy. Thanks for sharing

Reply
Ana
October 29, 2021 at 11:51 am
You're welcome, glad it's useful!

Reply
Raza
December 2, 2021 at 1:57 pm
Hi there

Does this works as integration app? Ahrefs offers API and integration as 2 separate things for some reason. Even the premium plan doesnt offer direct API access however you can connect your Ahrefs account with some existing App to get the required data. Will this work with an account or do you need API?

Reply
Ana
December 2, 2021 at 2:51 pm
Yep, it lets you access API data for free, as long as you have an Ahrefs account. You don't need to have their API plan.

Reply
Dnl
December 10, 2021 at 9:51 am
Hi Ana,

when im using the sidebar this works perfect! But im trying to use importAPI with this and im getting this error:
"Request failed: Access not granted or expired. Please click Manage Connections and check OAuth2 connection status."

Reply
Ana
December 10, 2021 at 10:00 am
You probably need to switch to a sheet where you're the sheet owner. Please check the error messages section of this article, it explains the issue in more detail.

Reply
Mark
March 31, 2022 at 1:37 pm
You mention that I can grab Keywords in your intro. What 'From' do I need to set in order to grab my saved keywords data for a specific domain?

Reply
Ana
March 31, 2022 at 3:04 pm
It doesn't look like they provide saved keyword lists via the API, you can see an old discussion about it on their roadmap. You can get some keywords data using the positions_metrics parameter.

Reply
Larry
July 13, 2022 at 3:18 pm
Hello,

Is this possible to target several urls in the same query ?

For exemple to concatenat a bunch of url and test all of them with only 1 request ?

Larry

Reply
Ana
July 13, 2022 at 10:21 pm
Ahrefs doesn't let you query multiple URLs in the same request, but you can use Uniquery API Connector's multi-query functionality to list out your URLs and automatically cycle through them. You'll need to convert to a custom request first.

Reply
Sarah
September 14, 2022 at 8:44 am
Hey! It looks like the "Connect to ahrefs" button is not working for me. It shows just unclickable. Am I missing something?

Reply
Ana
September 14, 2022 at 1:36 pm
Hey Sarah, the Ahrefs connection is only available for users on the Business plan, sorry for the confusion. You get a free 2 week trial when you first install Uniquery API Connector, or feel free to message support with your email address if you'd like me to extend that for you.

Reply
Kerry
November 25, 2022 at 4:30 pm
Hey Ana,

Are we able to use cell references in the 'target' section of the Application connection?

Reply
Ana
November 26, 2022 at 2:23 am
Hey Kerry, currently you'll need to use a custom request for that, as only custom requests let you reference cells. (We'll enable cell references in the preset application menu in the future, but it's not available yet).
Update: you can now reference cells through the integration.

Reply
Anton
November 26, 2022 at 6:28 pm
Does it support api v3 requests?
I'm getting "Completed with errors" result in cell

Ana
November 27, 2022 at 1:48 am
Our integrated connector is for V2, but you could create your own custom V3 request. However, unlike v2, v3 requires that you are an Ahrefs Enterprise customer.

Dan
December 7, 2022 at 12:31 pm
Hey Ana,

Would this support pulling data from multiple competitors into one sheet? Ideally want to build a giant competitor database of Referring Domains. Would this be achievable?

Reply
Ana
December 8, 2022 at 2:31 am
Sure, you could pull referring domains for multiple competitors into a single sheet. It would probably be easiest to list all the domains in one sheet and then cycle through them with a custom request like https://apiv2.ahrefs.com/?output=json&mode=subdomains&from=refdomains&order_by=domain_rating:desc&target=+++Domains!A1:A10+++
I think my main concern would be that if you want to build a giant database, Sheets may not be the best place, since it's not really suited for very large amounts of data. But that really depends on what you have in mind.

Reply
Dan
December 13, 2022 at 9:55 am
Hey Anna, Many thanks for your response. - I'd love to speak to someone on your side on this a bit deeper!

Reply
Britt
February 9, 2023 at 6:03 pm
Is there a way to pull in data by segment using this? I have segments saved in Ahrefs site audit, but I can't apply those when using the looker studio connector. I was hoping this might be a workaround...

Reply
Ana
February 10, 2023 at 1:24 am
As far as I know segments are available only through the interface, not through the API. You can choose whether to match on the exact URL, the domain, the subdomain, or the prefix, which overlaps with some of the segment functionality, but you can't directly access the segments you've created.

Reply
roger
June 22, 2023 at 7:05 pm
What will happen to this integration when the V2 API is discontinued?

Reply
Ana
June 22, 2023 at 10:46 pm
Ahref currently writes: "Existing Integration apps will continue to work as before until further notice, but new submissions are no longer accepted."
If/when they discontinue existing integrations, then this integration will stop working, but we haven't received any notice about that yet.

Reply
linda
July 26, 2023 at 3:16 pm
Hi Ana, Is there an option to pull stats by date? I'm interested in the number of referring domains over the past 30 days. Thanks

Reply
Ana
July 26, 2023 at 3:57 pm
When you fetch data from the refdomains table, it returns the fields refdomains.first_seen and refdomains.last_visited. Further, you can sort this by entering first_seen:desc into the order_by parameter, to get a list of all the most recent referring domains. So, while it doesn't specifically filter for the last 30 days, I think this is close to what you're looking for.

Reply
Leave a Comment
Comment

Name
Name
Email
Email
Jump To
Contents
Before You Begin
Part 1: Connect to the Ahrefs API
Part 2: Pull Data from Ahrefs to Sheets
Part 3: Create a Custom API Request
Part 4: API Documentation
Appendix: Connect to the v3 API (Enterprise only)
Support
Knowledge Base
Support Forum
Contact
Company
About
Terms and Privacy
Affiliates
Social
LinkedIn
YouTube
Blog
Tools
Basic Auth Generator
JMESPath Expression Tester
Skip to content
Uniquery
Uniquery

Uniquery API Connector
Integrations
Pricing
Knowledge Base
Support
Search the documentation...

Search
Get Started
Create a Request
Edit Fields
Print Request Metadata
Print Timestamp
Scheduling
Set Data Destination
Set Output Mode
Set Output Options
Set Report Style
Custom Requests
Connect to an OAuth API
Create a Custom Request
Include Headers
Include Request Bodies
Set Request Method
Use Cell Values in Requests
Advanced Features
Create a Custom OAuth Connection
Flatten Fields to Columns
ImportAPI Custom Function
JMESPath Filtering
Multi-Query Requests
Pagination Handling
View Raw API Response
Manage Requests
Duplicate Requests
Export API Requests
Import API Requests
Import Curl Requests
Request Logging
Help
Account Management
Error Messages
Frequently Asked Questions
Troubleshooting
Troubleshooting Triggers
Step-by-Step API Guides
Import 3Commas Data to Google Sheets
Import Abstract API Data to Google Sheets
Import AccuWeather Data to Google Sheets
Import ActiveCampaign Data to Google Sheets
Import AdRoll Data to Google Sheets
Import AfterShip Data to Google Sheets
Import Ahrefs Data to Google Sheets
Import Airtable Data to Google Sheets
Import Alpha Vantage Data to Google Sheets
Import API-Football Data to Google Sheets (RapidAPI)
Import AppsFlyer Data to Google Sheets
Import Asana Data to Google Sheets
Import BambooHR Data to Google Sheets
Import Basecamp Data to Google Sheets
Import BaseLinker Data to Google Sheets
Show all articles ( 158 )
Projects
Construct a CRM Dashboard in Google Sheets
Convert Latitude-Longitude Data to Addresses in Google Sheets
Facebook Marketing API Request URL Builder
Free Crypto APIs for Google Sheets
Get Product Cost From Shopify API in Google Sheets
Introduction to APIs
What is a GET Request?
What is a POST Request?
What is an API Header?
What is an API Request Body?
What is an API Request Method?
What is an API URL?
What is an API?
What is API Authentication?
Print
Construct a CRM Dashboard in Google Sheets
Last Updated On
July 28, 2020
by
Doug
< Knowledge Base
There are lots of great tools available for Customer Relationship Management (CRM) to help you not only win new customers from leads, but also maintain customer relationships by keeping them within your pipeline (better thought of as a cycle). While pipedrive offers an all-in-one service to keep track of customer leads, you may at some point want the to export the raw data to Google Sheets and make your own visualization tools. In this tutorial, I will show you exactly how to accomplish that!

If you want to skip ahead to the finished product, just jump to this link. Make sure you make a copy if you want to tinker with the underlying formulas! The end result looks like this:

image-83
Note: This tutorial requires the pro version of Uniquery API Connector, as the data from pipedrive needs to be wrangled into Google Sheets via the JMES path.

CRM Dashboard Design
When creating a dashboard for CRM, lets brainstorm some of the things we might be interested in displaying. Things that come to mind include:

Total sales to-date
Potential sales
Volume of opportunities in each stage
Volume of open opportunities
How many upcoming activities you need to accomplish (calls, lunches, etc)
So let's get right to it! Here's an overview of all the steps we will take to get our Dashboard up and running.

CONTENTS
Part 1: Preliminary Setup and Raw Data
Part 2: Getting Specific Columns
Part 3: Convert Currencies
Part 4: Aggregate Data
Part 5: Map Stage Names to New Column
Part 6: Let's Make Some Graphs!
PART 1: PRELIMINARY SETUP AND RAW DATA
Let's start by setting up three new sheets. Let's label them "Deals_Raw_Data", "Dashboard", and "Extra_Data".


Now we want to pull in our raw data from pipedrive. Heading over to the documentation, we can find the URL to grab all deals looks something like this:

https://YOUR_URL.pipedrive.com/v1/deals?api_token=YOUR_API_TOKEN

That's it for the URL! Just add that to API URL path. The only thing we need to do now is head down to the Output Options in Uniquery API Connector and change Report style to "compact", and set JMESPath to "data[*]". Lastly, make sure you set Destination Sheet to "Deals_Raw_Data". You should end up with something that looks like this:



Go ahead and run your request to get something like this:


PART 2: GETTING SPECIFIC COLUMNS
We have a ton of columns in this sheet, but we don't need all of them! For this dashboard, we are mainly interested in getting quantitative data on our customers, not so much their contact information. Go ahead and hold Ctrl and click on the column names that look interesting to you. I ended up getting these:

person_id » name	org_id » name	org_id » address	status	value	currency	stage_id	next_activity_type
Once you've selected all of the columns that look interesting, let's paste them over in our "Dashboard" sheet. Above the pasted raw column names, you can go ahead and rename them some more pleasing to the human eye.


I put a lot of extra space above our column names so we can make room for our fancy dashboard later.

Now we need to copy over the data from the raw data sheet. The easiest way to do this is by inserting the below formula into the cell directly below our first column over in the Dashboard sheet:

=QUERY(Deals_Raw_Data!$1:$10000,"SELECT "&SUBSTITUTE(ADDRESS(1,MATCH(B22,Deals_Raw_Data!$1:$1,0),4),1,""),1)

Make sure you change the value B22 right after the MATCH function to the corresponding cell that contains the raw data's column name! You should end up looking like this:


And after hitting enter:


Now go ahead and drag the cell with the small blue square to copy this formula to the other remaining columns:


Phew! Okay, let's go ahead and do a little housekeeping and clean up some of the columns to be a bit more useful and standardized.

PART 3: CONVERT CURRENCIES
You may have noticed that the currency column has two different currencies: USD and EUR. Let's standardize our column to one currency using a formula trick. Head over to the Extra Data sheet and setup a small table like this:


Now we are going to use the function GOOGLEFINANCE() (I typed that at the top of my table to remind me which one to use). This function is a little different than the standard format you may be used to, but nonetheless set it up like this:

=GOOGLEFINANCE("Currency:"&A2&B2)

The cell value will be the exchange rate between the two currencies. Your little conversion table should look like this now:


Now, by going back over to the Dashboard sheet, let's setup an IF function to deal with our Euros and convert them to good ol' fashioned US bucks. First we need to insert a new column somewhere and call it "Converted Currency" or something like that. Then we can use the conditional IF formula below to convert EUR to USD:

=IF((G24="EUR"),F24*Extra_Data!$C$2,F24)

After dragging the formula down the column, any values that are listed in EUR should be converted to USD now.


For aesthetic purposes let's go ahead and hide the hideous raw data column names to clean up our Dashboard environment a bit.


PART 4: AGGREGATE DATA
From our little brainstorm at the beginning of this tutorial, we can start manipulating our data to make clean insights. Let's start by finding out how much money we've made so far on completed contracts.

For this, we will use the SUMIF() function. We start by defining the range we want to check our conditional with, followed by the conditional, followed by the range of data to sum. In our case, it should look something like this:

=SUMIF(E24:E53,"won",H24:H53)


Now, let's see how much money we've LOST in contracts. We can use a similar formula as above, but change the second argument to "lost".

=SUMIF(E24:E53,"lost",H24:H53)


Lastly, and probably most importantly, we want to see how much money is on the line currently. Following the same flow as the last two functions, we will set the 2nd argument to "open" this time.

=SUMIF(E24:E53,"open",H24:H53)


Now, let's see how many lunches and phone calls we have remaining to do with potential customers. We can use the COUNTIF() function to conditionally count values in a column. Let's count how many lunches and calls we have left to accomplish using the following formulas:

=COUNTIF(J29:J58,"lunch")
=COUNTIF(J29:J58,"call")


PART 5: MAP STAGE NAMES TO NEW COLUMN
Let's focus on visualizing our data now. We could visualize how much money is tied up in each stage of the CRM pipeline using either bar charts or a pie graph. In this example, I'll use a bar graph.

The raw data has a column named "pipeline stage" that spits out numeric values. To understand what each number corresponds to, we can head over to our dashboard in pipedrive and compare it to the numbers we get back from our raw data. We can see most of our open deals are in stage 1/Lead In.



There are a few things we need to consider before moving forward:

Filtering of won/lost deals
Numeric values in our table
Not all stages contain deals
With these things in mind, let's start by making a mapping table to map our numeric values to their respective stage names. Head over to the "Extra_Data" tab and setup a new table.


Now, let's use the VLOOKUP() function to map our names to a new column back in our dashboard data. Make a new column next to the Pipeline Stage column in Dashboard and insert the following formula into the cell adjacent to Pipeline Stage column:

=VLOOKUP(I28,Extra_Data!A$7:B$12,2)

Drag it down the whole column, and voila! There are your stage names:


PART 6: LET'S MAKE SOME GRAPHS!
We need to aggregate and wrangle the data a bit. Let's try to aggregate the total value in each stage of the pipeline, similar to the Deals tab in pipedrive. To accomplish this, we will first start by using the QUERY() function in google sheets. This is a quasi-SQL function that is very powerful, but can be quite unwieldy if you don't know what you're doing. I've done the dirty work for you and found the correct query for this use case:

=QUERY(E27:J57,"select J, sum(H) where E = 'open' group by J ")

J corresponds to our column with the labels in it and H corresponds to the column containing the cash value of each deal. I scrolled to the right off screen of the dashboard and setup a "construction" area where we can do these small operations hidden safely from our main dashboard.


I also put in a construction sign to remind us what this area is for 😉
Now, we need to add some "filler" pipeline states and set them equal to zero in order for our chart to show all the states in the right order. Just manually type them in and you'll end up with something like this:


Obviously our data is unsorted. We want "Lead-In" to be our first label, and "Negotiations Started" to be our last label. We will use a combination of the SORT() and MATCH() functions to accomplish this:

=SORT(P7:Q12,MATCH(P7:P12,{"Lead-In","Contact Made","Prospect Qualified","Needs Defined","Proposal Made", "Negotiations Started"},0),1)

Put this in a cell near our previous table, and you should get them sorted by their respective pipeline stage.


We can use this data to make a bar graph now! Head back over to our main dashboard area and insert a new bar graph. We need to select the data from the last table we just made:


Your chart should automatically infer the correct order since we sorted it with our last function.


Now it's just time to pretty it up a bit! You can spruce it up yourself by clicking the 3 dots at the top right corner of the chart and clicking "Edit chart".


Now that you've finished that, let's make our dashboard a bit more professional. We can remove unnecessary grid lines, throw in some icons, and whatever else you want to make it look good!


Again if you wanna just jump over to the sheet and mess around with a copy, head over to this link. Hope that was a helpful tutorial! Happy connecting!

Next 
Convert Latitude-Longitude Data to Addresses in Google Sheets
1 thought on “Construct a CRM Dashboard in Google Sheets”
Haerul
September 2, 2023 at 9:40 pm
Halo

Reply
Leave a Comment
Comment

Name
Name
Email
Email
Jump To
CRM Dashboard Design
CONTENTS
PART 1: PRELIMINARY SETUP AND RAW DATA
PART 2: GETTING SPECIFIC COLUMNS
PART 3: CONVERT CURRENCIES
PART 4: AGGREGATE DATA
PART 5: MAP STAGE NAMES TO NEW COLUMN
PART 6: LET'S MAKE SOME GRAPHS!
Support
Knowledge Base
Support Forum
Contact
Company
About
Terms and Privacy
Affiliates
Social
LinkedIn
YouTube
Blog
Tools
Basic Auth Generator
JMESPath Expression Tester
FB Insights API URL Builder
Copyright © 2024 Uniquery, LLC | All Rights Reserved | 651 N Broad St, Suite 206, Middletown, DE 19709, USA

Uniquery API Connector is a powerful, easy-to-use extension that pulls data from any API into Google Sheets™. Start quickly with a library of ready-to-use APIs, or create your own custom connections to the data sources you choose.

👇 More info

✨ Free features:
*100 monthly requests
*Access thousands of preset requests through a built-in API library
*Visual field editor to filter and re-arrange fields
*Save your API requests for future access
*Choose whether new data should overwrite or append to existing data
*Use cell values in API requests for dynamic queries
*4+ built-in JSON-to-Sheets converter algorithms
*GET / POST / PUT / PATCH /  DELETE support
*Works with all major data formats (JSON, XML, and CSV)
*Log timestamps and request URLs to your output sheet
*Import Curl commands and preset request files
*Preview JSON output
*Automatically handle pagination
*JMESPath query language support for filtering API results
*Connect to integrated APIs by clicking a button (OAuth)
*Create custom OAuth connections

_______________________________________________________________________________________

🔥 Paid features:
*Schedule API pulls to refresh automatically
*Set trigger execution order
*Higher save/run limits

_______________________________________________________________________________________


✅ Integrations:
 Integrates with thousands of interesting, unique, and popular data APIs. This is a totally flexible add-on that connects to almost any platform, so you can build what you want.  Hundreds of APIs are available through a built-in library, or add your own custom connection in a no-code interface. See more at https://Uniquery.io/integrations/




